uri;
browser version; unlisted;
path [ level1 [ level2 [ level3 ]]];
on | v1 | log | off;
name { ... }
field;
key zone = name: size rate = rate;
off | expired | no-cache | no-store | private | no_last_modified | no_etag | auth | any...;
flv;
field...;
off | method...;
charset1 charset2 { ... }
file... uri; file... = code;
on | off | always;
size | off;
{ ... }
[ protocol://] address;
string;
address... [ valid = time ]; off;
device;
1.0 | 1.1;
address | CIDR | unix:;
abort | stop;
value;
json; jsonp [ callback ];
mime-type;
zone;
expression;
name | none;
address | CIDR;
on | clean | off;
all | any;
interval;
address;
file | mask;
on | off | threads [ = pool ];
on | off;
header | last_byte;
number size;
connections;
error | timeout | invalid_response | not_found | off...;
quality;
name...;
off; max = N [ inactive = time ];
zone = name [ burst = number ] [ nodelay ];
size;
[ = | ~ | ~* | ^~ ] uri { ... } @ name { ... }
on | off | only;
off; domain replacement;
internal;
number;
default; off; redirect replacement;
time | max | off;
error | timeout | invalid_header | http_500 | http_502 | http_503 | http_504 | http_403 | http_404 | off...;
module:: function |'sub { ... }';
regex;
[ parameters ];
method...;
flag;
ip_hash;
address: port [ ssl ] [ bind ] [ ipv6only = on | off ] [ so_keepalive = on | off |[ keepidle ]:[ keepintvl ]:[ keepcnt ]];
name size;
$variable module:: function |'sub { ... }';
cpumask...;
max = N [ inactive = time ] [ min_uses = N ] [ valid = time ]; off;
off; on | if_not_owner [ from = part ];
string replacement;
key [ consistent ];
html | xml | json | jsonp;
[ modified ] time; epoch | max | off;
parameter value [ if_not_empty ];
number [ timeout = time ];
on | off | factor;
address [ parameters ];
regex...;
string...;
module;
ciphers;
[ group ];
( condition ) { ... }
[ SSLv2 ] [ SSLv3 ] [ TLSv1 ] [ TLSv1.1 ] [ TLSv1.2 ];
[ $address ] $variable { ... }
regex replacement [ flag ];
code [ text ]; code URL; URL;
method;
address... [ valid = time ] [ ipv6 = on | off ];
info | notice | warn | error;
name string...;
stub_status;
file;
off | none | [ builtin [: size ]] [ shared: name: size ];
name;
GET | HEAD | POST...;
break;
letter | digit | = | off;
mp4;
directory;
off | exact | before;
upstream_conf;
field value;
length;
number | auto;
address [: port ] [ default_server ] [ ssl ] [ spdy ] [ proxy_protocol ] [ setfib = number ] [ fastopen = number ] [ backlog = number ] [ rcvbuf = size ] [ sndbuf = size ] [ accept_filter = filter ] [ deferred ] [ bind ] [ ipv6only = on | off ] [ so_keepalive = on | off |[ keepidle ]:[ keepintvl ]:[ keepcnt ]]; port [ default_server ] [ ssl ] [ spdy ] [ proxy_protocol ] [ setfib = number ] [ fastopen = number ] [ backlog = number ] [ rcvbuf = size ] [ sndbuf = size ] [ accept_filter = filter ] [ deferred ] [ bind ] [ ipv6only = on | off ] [ so_keepalive = on | off |[ keepidle ]:[ keepintvl ]:[ keepcnt ]]; unix: path [ default_server ] [ ssl ] [ spdy ] [ proxy_protocol ] [ backlog = number ] [ rcvbuf = size ] [ sndbuf = size ] [ accept_filter = filter ] [ deferred ] [ bind ] [ so_keepalive = on | off |[ keepidle ]:[ keepintvl ]:[ keepcnt ]];
on | off | string;
imap | pop3 | smtp;
string ...;
[ code...] time;
level;
path;
method... { ... }
error | timeout | invalid_header | updating | http_500 | http_502 | http_503 | http_504 | http_403 | http_404 | off...;
parameter value;
error | timeout | invalid_header | http_500 | http_503 | http_403 | http_404 | off...;
name [ expires= time ] [ domain= domain ] [ path= path ];
name | off;
timeout;
zone | off;
address: port [ bind ];
error | timeout | invalid_header | updating | http_500 | http_503 | http_403 | http_404 | off...;
empty_gif;
none | browser...;
header value;
address | off;
on | off | optional | optional_no_ca;
name threads = number [ max_queue = number ];
path zone = name: size [ format = format ] [ timeout = time ] [ id = id ] [ md5 = md5 ] ;
off; test; size; rotate 90 | 180 | 270; resize width height; crop width height;
hls;
key zone = name: size;
stylesheet [ parameter = value...];
| off;
code;
word;
address | CIDR | unix: | all;
extension...;
users: permissions...;
string | off;
percent;
string $variable { ... }
variable value;
off | on | always;
mime-type...;
$variable value;
none | blocked | server_names | string...;
status;
connect | first_byte | last_byte;
zone number;
time;
cookie name [ expires= time ] [ domain= domain ] [ httponly ] [ secure ] [ path= path ]; route $variable...; learn create= $variable lookup= $variable zone= name: size [ timeout= time ];
name value [ always ];
off; path replacement;
code... [ = [ response ]] uri;
path [ format [ buffer = size [ flush = time ]] [ if = condition ]]; path format gzip[= level ] [ buffer = size ] [ flush = time ] [ if = condition ]; syslog: server = address [, parameter = value ] [ format [ if = condition ]]; off;
rate;
file | stderr | syslog: server = address [, parameter = value ] | memory: size [ debug | info | notice | warn | error | crit | alert | emerg ];
url;
file...;
timeout [ header_timeout ];
charset;
field | X-Real-IP | X-Forwarded-For | proxy_protocol;
uri | off;
URL;
variable [= value ];
string | none;
f4f;
path [ levels = levels ] [ use_temp_path = on | off ] keys_zone = name: size [ inactive = time ] [ max_size = size ] [ loader_files = number ] [ loader_sleep = time ] [ loader_threshold = time ];
name $variable size;
least_conn;
curve;
