$VAR1 = {
          'location' => [
                          {
                            'aio' => 'aio on | off | threads [ = pool ];'
                          },
                          {
                            'alias' => 'alias path;'
                          },
                          {
                            'chunked_transfer_encoding' => 'chunked_transfer_encoding on | off;'
                          },
                          {
                            'client_body_buffer_size' => 'client_body_buffer_size size;'
                          },
                          {
                            'client_body_in_file_only' => 'client_body_in_file_only on | clean | off;'
                          },
                          {
                            'client_body_in_single_buffer' => 'client_body_in_single_buffer on | off;'
                          },
                          {
                            'client_body_temp_path' => 'client_body_temp_path path [ level1 [ level2 [ level3 ]]];'
                          },
                          {
                            'client_body_timeout' => 'client_body_timeout time;'
                          },
                          {
                            'client_max_body_size' => 'client_max_body_size size;'
                          },
                          {
                            'default_type' => 'default_type mime-type;'
                          },
                          {
                            'directio' => 'directio size | off;'
                          },
                          {
                            'directio_alignment' => 'directio_alignment size;'
                          },
                          {
                            'disable_symlinks' => 'disable_symlinks off; disable_symlinks on | if_not_owner [ from = part ];'
                          },
                          {
                            'error_page' => 'error_page code... [ = [ response ]] uri;'
                          },
                          {
                            'etag' => 'etag on | off;'
                          },
                          {
                            'if_modified_since' => 'if_modified_since off | exact | before;'
                          },
                          {
                            'internal' => 'internal;'
                          },
                          {
                            'keepalive_disable' => 'keepalive_disable none | browser...;'
                          },
                          {
                            'keepalive_requests' => 'keepalive_requests number;'
                          },
                          {
                            'keepalive_timeout' => 'keepalive_timeout timeout [ header_timeout ];'
                          },
                          {
                            'limit_except' => 'limit_except method... { ... }'
                          },
                          {
                            'limit_rate' => 'limit_rate rate;'
                          },
                          {
                            'limit_rate_after' => 'limit_rate_after size;'
                          },
                          {
                            'lingering_close' => 'lingering_close off | on | always;'
                          },
                          {
                            'lingering_time' => 'lingering_time time;'
                          },
                          {
                            'lingering_timeout' => 'lingering_timeout time;'
                          },
                          {
                            'location' => 'location [ = | ~ | ~* | ^~ ] uri { ... } location @ name { ... }'
                          },
                          {
                            'log_not_found' => 'log_not_found on | off;'
                          },
                          {
                            'log_subrequest' => 'log_subrequest on | off;'
                          },
                          {
                            'max_ranges' => 'max_ranges number;'
                          },
                          {
                            'msie_padding' => 'msie_padding on | off;'
                          },
                          {
                            'msie_refresh' => 'msie_refresh on | off;'
                          },
                          {
                            'open_file_cache' => 'open_file_cache off; open_file_cache max = N [ inactive = time ];'
                          },
                          {
                            'open_file_cache_errors' => 'open_file_cache_errors on | off;'
                          },
                          {
                            'open_file_cache_min_uses' => 'open_file_cache_min_uses number;'
                          },
                          {
                            'open_file_cache_valid' => 'open_file_cache_valid time;'
                          },
                          {
                            'output_buffers' => 'output_buffers number size;'
                          },
                          {
                            'port_in_redirect' => 'port_in_redirect on | off;'
                          },
                          {
                            'postpone_output' => 'postpone_output size;'
                          },
                          {
                            'read_ahead' => 'read_ahead size;'
                          },
                          {
                            'recursive_error_pages' => 'recursive_error_pages on | off;'
                          },
                          {
                            'reset_timedout_connection' => 'reset_timedout_connection on | off;'
                          },
                          {
                            'resolver' => 'resolver address... [ valid = time ] [ ipv6 = on | off ];'
                          },
                          {
                            'resolver_timeout' => 'resolver_timeout time;'
                          },
                          {
                            'root' => 'root path;'
                          },
                          {
                            'satisfy' => 'satisfy all | any;'
                          },
                          {
                            'send_lowat' => 'send_lowat size;'
                          },
                          {
                            'send_timeout' => 'send_timeout time;'
                          },
                          {
                            'sendfile' => 'sendfile on | off;'
                          },
                          {
                            'sendfile_max_chunk' => 'sendfile_max_chunk size;'
                          },
                          {
                            'server_name_in_redirect' => 'server_name_in_redirect on | off;'
                          },
                          {
                            'server_tokens' => 'server_tokens on | off;'
                          },
                          {
                            'tcp_nodelay' => 'tcp_nodelay on | off;'
                          },
                          {
                            'tcp_nopush' => 'tcp_nopush on | off;'
                          },
                          {
                            'try_files' => 'try_files file... uri; try_files file... = code;'
                          },
                          {
                            'types' => 'types { ... }'
                          },
                          {
                            'types_hash_bucket_size' => 'types_hash_bucket_size size;'
                          },
                          {
                            'types_hash_max_size' => 'types_hash_max_size size;'
                          },
                          {
                            'allow' => 'allow address | CIDR | unix: | all;'
                          },
                          {
                            'deny' => 'deny address | CIDR | unix: | all;'
                          },
                          {
                            'add_before_body' => 'add_before_body uri;'
                          },
                          {
                            'add_after_body' => 'add_after_body uri;'
                          },
                          {
                            'addition_types' => 'addition_types mime-type...;'
                          },
                          {
                            'auth_basic' => 'auth_basic string | off;'
                          },
                          {
                            'auth_basic_user_file' => 'auth_basic_user_file file;'
                          },
                          {
                            'auth_request' => 'auth_request uri | off;'
                          },
                          {
                            'auth_request_set' => 'auth_request_set variable value;'
                          },
                          {
                            'autoindex' => 'autoindex on | off;'
                          },
                          {
                            'autoindex_exact_size' => 'autoindex_exact_size on | off;'
                          },
                          {
                            'autoindex_format' => 'autoindex_format html | xml | json | jsonp;'
                          },
                          {
                            'autoindex_localtime' => 'autoindex_localtime on | off;'
                          },
                          {
                            'ancient_browser' => 'ancient_browser string...;'
                          },
                          {
                            'ancient_browser_value' => 'ancient_browser_value string;'
                          },
                          {
                            'modern_browser' => 'modern_browser browser version; modern_browser unlisted;'
                          },
                          {
                            'modern_browser_value' => 'modern_browser_value string;'
                          },
                          {
                            'charset' => 'charset charset | off;'
                          },
                          {
                            'charset_types' => 'charset_types mime-type...;'
                          },
                          {
                            'override_charset' => 'override_charset on | off;'
                          },
                          {
                            'source_charset' => 'source_charset charset;'
                          },
                          {
                            'dav_access' => 'dav_access users: permissions...;'
                          },
                          {
                            'dav_methods' => 'dav_methods off | method...;'
                          },
                          {
                            'create_full_put_path' => 'create_full_put_path on | off;'
                          },
                          {
                            'min_delete_depth' => 'min_delete_depth number;'
                          },
                          {
                            'empty_gif' => 'empty_gif;'
                          },
                          {
                            'f4f' => 'f4f;'
                          },
                          {
                            'f4f_buffer_size' => 'f4f_buffer_size size;'
                          },
                          {
                            'fastcgi_bind' => 'fastcgi_bind address | off;'
                          },
                          {
                            'fastcgi_buffer_size' => 'fastcgi_buffer_size size;'
                          },
                          {
                            'fastcgi_buffering' => 'fastcgi_buffering on | off;'
                          },
                          {
                            'fastcgi_buffers' => 'fastcgi_buffers number size;'
                          },
                          {
                            'fastcgi_busy_buffers_size' => 'fastcgi_busy_buffers_size size;'
                          },
                          {
                            'fastcgi_cache' => 'fastcgi_cache zone | off;'
                          },
                          {
                            'fastcgi_cache_bypass' => 'fastcgi_cache_bypass string...;'
                          },
                          {
                            'fastcgi_cache_key' => 'fastcgi_cache_key string;'
                          },
                          {
                            'fastcgi_cache_lock' => 'fastcgi_cache_lock on | off;'
                          },
                          {
                            'fastcgi_cache_lock_age' => 'fastcgi_cache_lock_age time;'
                          },
                          {
                            'fastcgi_cache_lock_timeout' => 'fastcgi_cache_lock_timeout time;'
                          },
                          {
                            'fastcgi_cache_methods' => 'fastcgi_cache_methods GET | HEAD | POST...;'
                          },
                          {
                            'fastcgi_cache_min_uses' => 'fastcgi_cache_min_uses number;'
                          },
                          {
                            'fastcgi_cache_purge' => 'fastcgi_cache_purge string ...;'
                          },
                          {
                            'fastcgi_cache_revalidate' => 'fastcgi_cache_revalidate on | off;'
                          },
                          {
                            'fastcgi_cache_use_stale' => 'fastcgi_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_503 | http_403 | http_404 | off...;'
                          },
                          {
                            'fastcgi_cache_valid' => 'fastcgi_cache_valid [ code...] time;'
                          },
                          {
                            'fastcgi_catch_stderr' => 'fastcgi_catch_stderr string;'
                          },
                          {
                            'fastcgi_connect_timeout' => 'fastcgi_connect_timeout time;'
                          },
                          {
                            'fastcgi_force_ranges' => 'fastcgi_force_ranges on | off;'
                          },
                          {
                            'fastcgi_hide_header' => 'fastcgi_hide_header field;'
                          },
                          {
                            'fastcgi_ignore_client_abort' => 'fastcgi_ignore_client_abort on | off;'
                          },
                          {
                            'fastcgi_ignore_headers' => 'fastcgi_ignore_headers field...;'
                          },
                          {
                            'fastcgi_index' => 'fastcgi_index name;'
                          },
                          {
                            'fastcgi_intercept_errors' => 'fastcgi_intercept_errors on | off;'
                          },
                          {
                            'fastcgi_keep_conn' => 'fastcgi_keep_conn on | off;'
                          },
                          {
                            'fastcgi_limit_rate' => 'fastcgi_limit_rate rate;'
                          },
                          {
                            'fastcgi_max_temp_file_size' => 'fastcgi_max_temp_file_size size;'
                          },
                          {
                            'fastcgi_next_upstream' => 'fastcgi_next_upstream error | timeout | invalid_header | http_500 | http_503 | http_403 | http_404 | off...;'
                          },
                          {
                            'fastcgi_next_upstream_timeout' => 'fastcgi_next_upstream_timeout time;'
                          },
                          {
                            'fastcgi_next_upstream_tries' => 'fastcgi_next_upstream_tries number;'
                          },
                          {
                            'fastcgi_no_cache' => 'fastcgi_no_cache string...;'
                          },
                          {
                            'fastcgi_param' => 'fastcgi_param parameter value [ if_not_empty ];'
                          },
                          {
                            'fastcgi_pass' => 'fastcgi_pass address;'
                          },
                          {
                            'fastcgi_pass_header' => 'fastcgi_pass_header field;'
                          },
                          {
                            'fastcgi_read_timeout' => 'fastcgi_read_timeout time;'
                          },
                          {
                            'fastcgi_pass_request_body' => 'fastcgi_pass_request_body on | off;'
                          },
                          {
                            'fastcgi_pass_request_headers' => 'fastcgi_pass_request_headers on | off;'
                          },
                          {
                            'fastcgi_request_buffering' => 'fastcgi_request_buffering on | off;'
                          },
                          {
                            'fastcgi_send_lowat' => 'fastcgi_send_lowat size;'
                          },
                          {
                            'fastcgi_send_timeout' => 'fastcgi_send_timeout time;'
                          },
                          {
                            'fastcgi_split_path_info' => 'fastcgi_split_path_info regex;'
                          },
                          {
                            'fastcgi_store' => 'fastcgi_store on | off | string;'
                          },
                          {
                            'fastcgi_store_access' => 'fastcgi_store_access users: permissions...;'
                          },
                          {
                            'fastcgi_temp_file_write_size' => 'fastcgi_temp_file_write_size size;'
                          },
                          {
                            'fastcgi_temp_path' => 'fastcgi_temp_path path [ level1 [ level2 [ level3 ]]];'
                          },
                          {
                            'flv' => 'flv;'
                          },
                          {
                            'gunzip' => 'gunzip on | off;'
                          },
                          {
                            'gunzip_buffers' => 'gunzip_buffers number size;'
                          },
                          {
                            'gzip' => 'gzip on | off;'
                          },
                          {
                            'gzip_buffers' => 'gzip_buffers number size;'
                          },
                          {
                            'gzip_comp_level' => 'gzip_comp_level level;'
                          },
                          {
                            'gzip_disable' => 'gzip_disable regex...;'
                          },
                          {
                            'gzip_min_length' => 'gzip_min_length length;'
                          },
                          {
                            'gzip_http_version' => 'gzip_http_version 1.0 | 1.1;'
                          },
                          {
                            'gzip_proxied' => 'gzip_proxied off | expired | no-cache | no-store | private | no_last_modified | no_etag | auth | any...;'
                          },
                          {
                            'gzip_types' => 'gzip_types mime-type...;'
                          },
                          {
                            'gzip_vary' => 'gzip_vary on | off;'
                          },
                          {
                            'gzip_static' => 'gzip_static on | off | always;'
                          },
                          {
                            'add_header' => 'add_header name value [ always ];'
                          },
                          {
                            'expires' => 'expires [ modified ] time; expires epoch | max | off;'
                          },
                          {
                            'hls' => 'hls;'
                          },
                          {
                            'hls_buffers' => 'hls_buffers number size;'
                          },
                          {
                            'hls_forward_args' => 'hls_forward_args on | off;'
                          },
                          {
                            'hls_fragment' => 'hls_fragment time;'
                          },
                          {
                            'hls_mp4_buffer_size' => 'hls_mp4_buffer_size size;'
                          },
                          {
                            'hls_mp4_max_buffer_size' => 'hls_mp4_max_buffer_size size;'
                          },
                          {
                            'image_filter' => 'image_filter off; image_filter test; image_filter size; image_filter rotate 90 | 180 | 270; image_filter resize width height; image_filter crop width height;'
                          },
                          {
                            'image_filter_buffer' => 'image_filter_buffer size;'
                          },
                          {
                            'image_filter_interlace' => 'image_filter_interlace on | off;'
                          },
                          {
                            'image_filter_jpeg_quality' => 'image_filter_jpeg_quality quality;'
                          },
                          {
                            'image_filter_sharpen' => 'image_filter_sharpen percent;'
                          },
                          {
                            'image_filter_transparency' => 'image_filter_transparency on | off;'
                          },
                          {
                            'index' => 'index file...;'
                          },
                          {
                            'limit_conn' => 'limit_conn zone number;'
                          },
                          {
                            'limit_conn_log_level' => 'limit_conn_log_level info | notice | warn | error;'
                          },
                          {
                            'limit_conn_status' => 'limit_conn_status code;'
                          },
                          {
                            'limit_req' => 'limit_req zone = name [ burst = number ] [ nodelay ];'
                          },
                          {
                            'limit_req_log_level' => 'limit_req_log_level info | notice | warn | error;'
                          },
                          {
                            'limit_req_status' => 'limit_req_status code;'
                          },
                          {
                            'access_log' => 'access_log path [ format [ buffer = size [ flush = time ]] [ if = condition ]]; access_log path format gzip[= level ] [ buffer = size ] [ flush = time ] [ if = condition ]; access_log syslog: server = address [, parameter = value ] [ format [ if = condition ]]; access_log off;'
                          },
                          {
                            'open_log_file_cache' => 'open_log_file_cache max = N [ inactive = time ] [ min_uses = N ] [ valid = time ]; open_log_file_cache off;'
                          },
                          {
                            'memcached_bind' => 'memcached_bind address | off;'
                          },
                          {
                            'memcached_buffer_size' => 'memcached_buffer_size size;'
                          },
                          {
                            'memcached_connect_timeout' => 'memcached_connect_timeout time;'
                          },
                          {
                            'memcached_force_ranges' => 'memcached_force_ranges on | off;'
                          },
                          {
                            'memcached_gzip_flag' => 'memcached_gzip_flag flag;'
                          },
                          {
                            'memcached_next_upstream' => 'memcached_next_upstream error | timeout | invalid_response | not_found | off...;'
                          },
                          {
                            'memcached_next_upstream_timeout' => 'memcached_next_upstream_timeout time;'
                          },
                          {
                            'memcached_next_upstream_tries' => 'memcached_next_upstream_tries number;'
                          },
                          {
                            'memcached_pass' => 'memcached_pass address;'
                          },
                          {
                            'memcached_read_timeout' => 'memcached_read_timeout time;'
                          },
                          {
                            'memcached_send_timeout' => 'memcached_send_timeout time;'
                          },
                          {
                            'mp4' => 'mp4;'
                          },
                          {
                            'mp4_buffer_size' => 'mp4_buffer_size size;'
                          },
                          {
                            'mp4_max_buffer_size' => 'mp4_max_buffer_size size;'
                          },
                          {
                            'mp4_limit_rate' => 'mp4_limit_rate on | off | factor;'
                          },
                          {
                            'mp4_limit_rate_after' => 'mp4_limit_rate_after time;'
                          },
                          {
                            'perl' => 'perl module:: function |\'sub { ... }\';'
                          },
                          {
                            'proxy_bind' => 'proxy_bind address | off;'
                          },
                          {
                            'proxy_buffer_size' => 'proxy_buffer_size size;'
                          },
                          {
                            'proxy_buffering' => 'proxy_buffering on | off;'
                          },
                          {
                            'proxy_buffers' => 'proxy_buffers number size;'
                          },
                          {
                            'proxy_busy_buffers_size' => 'proxy_busy_buffers_size size;'
                          },
                          {
                            'proxy_cache' => 'proxy_cache zone | off;'
                          },
                          {
                            'proxy_cache_bypass' => 'proxy_cache_bypass string...;'
                          },
                          {
                            'proxy_cache_key' => 'proxy_cache_key string;'
                          },
                          {
                            'proxy_cache_lock' => 'proxy_cache_lock on | off;'
                          },
                          {
                            'proxy_cache_lock_age' => 'proxy_cache_lock_age time;'
                          },
                          {
                            'proxy_cache_lock_timeout' => 'proxy_cache_lock_timeout time;'
                          },
                          {
                            'proxy_cache_methods' => 'proxy_cache_methods GET | HEAD | POST...;'
                          },
                          {
                            'proxy_cache_min_uses' => 'proxy_cache_min_uses number;'
                          },
                          {
                            'proxy_cache_purge' => 'proxy_cache_purge string ...;'
                          },
                          {
                            'proxy_cache_revalidate' => 'proxy_cache_revalidate on | off;'
                          },
                          {
                            'proxy_cache_use_stale' => 'proxy_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_502 | http_503 | http_504 | http_403 | http_404 | off...;'
                          },
                          {
                            'proxy_cache_valid' => 'proxy_cache_valid [ code...] time;'
                          },
                          {
                            'proxy_connect_timeout' => 'proxy_connect_timeout time;'
                          },
                          {
                            'proxy_cookie_domain' => 'proxy_cookie_domain off; proxy_cookie_domain domain replacement;'
                          },
                          {
                            'proxy_cookie_path' => 'proxy_cookie_path off; proxy_cookie_path path replacement;'
                          },
                          {
                            'proxy_force_ranges' => 'proxy_force_ranges on | off;'
                          },
                          {
                            'proxy_headers_hash_bucket_size' => 'proxy_headers_hash_bucket_size size;'
                          },
                          {
                            'proxy_headers_hash_max_size' => 'proxy_headers_hash_max_size size;'
                          },
                          {
                            'proxy_hide_header' => 'proxy_hide_header field;'
                          },
                          {
                            'proxy_http_version' => 'proxy_http_version 1.0 | 1.1;'
                          },
                          {
                            'proxy_ignore_client_abort' => 'proxy_ignore_client_abort on | off;'
                          },
                          {
                            'proxy_ignore_headers' => 'proxy_ignore_headers field...;'
                          },
                          {
                            'proxy_intercept_errors' => 'proxy_intercept_errors on | off;'
                          },
                          {
                            'proxy_limit_rate' => 'proxy_limit_rate rate;'
                          },
                          {
                            'proxy_max_temp_file_size' => 'proxy_max_temp_file_size size;'
                          },
                          {
                            'proxy_method' => 'proxy_method method;'
                          },
                          {
                            'proxy_next_upstream' => 'proxy_next_upstream error | timeout | invalid_header | http_500 | http_502 | http_503 | http_504 | http_403 | http_404 | off...;'
                          },
                          {
                            'proxy_next_upstream_timeout' => 'proxy_next_upstream_timeout time;'
                          },
                          {
                            'proxy_next_upstream_tries' => 'proxy_next_upstream_tries number;'
                          },
                          {
                            'proxy_no_cache' => 'proxy_no_cache string...;'
                          },
                          {
                            'proxy_pass' => 'proxy_pass URL;'
                          },
                          {
                            'proxy_pass_header' => 'proxy_pass_header field;'
                          },
                          {
                            'proxy_read_timeout' => 'proxy_read_timeout time;'
                          },
                          {
                            'proxy_pass_request_body' => 'proxy_pass_request_body on | off;'
                          },
                          {
                            'proxy_pass_request_headers' => 'proxy_pass_request_headers on | off;'
                          },
                          {
                            'proxy_redirect' => 'proxy_redirect default; proxy_redirect off; proxy_redirect redirect replacement;'
                          },
                          {
                            'proxy_request_buffering' => 'proxy_request_buffering on | off;'
                          },
                          {
                            'proxy_send_lowat' => 'proxy_send_lowat size;'
                          },
                          {
                            'proxy_send_timeout' => 'proxy_send_timeout time;'
                          },
                          {
                            'proxy_set_body' => 'proxy_set_body value;'
                          },
                          {
                            'proxy_set_header' => 'proxy_set_header field value;'
                          },
                          {
                            'proxy_ssl_certificate' => 'proxy_ssl_certificate file;'
                          },
                          {
                            'proxy_ssl_certificate_key' => 'proxy_ssl_certificate_key file;'
                          },
                          {
                            'proxy_ssl_ciphers' => 'proxy_ssl_ciphers ciphers;'
                          },
                          {
                            'proxy_ssl_crl' => 'proxy_ssl_crl file;'
                          },
                          {
                            'proxy_ssl_name' => 'proxy_ssl_name name;'
                          },
                          {
                            'proxy_ssl_password_file' => 'proxy_ssl_password_file file;'
                          },
                          {
                            'proxy_ssl_server_name' => 'proxy_ssl_server_name on | off;'
                          },
                          {
                            'proxy_ssl_session_reuse' => 'proxy_ssl_session_reuse on | off;'
                          },
                          {
                            'proxy_ssl_protocols' => 'proxy_ssl_protocols [ SSLv2 ] [ SSLv3 ] [ TLSv1 ] [ TLSv1.1 ] [ TLSv1.2 ];'
                          },
                          {
                            'proxy_ssl_trusted_certificate' => 'proxy_ssl_trusted_certificate file;'
                          },
                          {
                            'proxy_ssl_verify' => 'proxy_ssl_verify on | off;'
                          },
                          {
                            'proxy_ssl_verify_depth' => 'proxy_ssl_verify_depth number;'
                          },
                          {
                            'proxy_store' => 'proxy_store on | off | string;'
                          },
                          {
                            'proxy_store_access' => 'proxy_store_access users: permissions...;'
                          },
                          {
                            'proxy_temp_file_write_size' => 'proxy_temp_file_write_size size;'
                          },
                          {
                            'proxy_temp_path' => 'proxy_temp_path path [ level1 [ level2 [ level3 ]]];'
                          },
                          {
                            'random_index' => 'random_index on | off;'
                          },
                          {
                            'set_real_ip_from' => 'set_real_ip_from address | CIDR | unix:;'
                          },
                          {
                            'real_ip_header' => 'real_ip_header field | X-Real-IP | X-Forwarded-For | proxy_protocol;'
                          },
                          {
                            'real_ip_recursive' => 'real_ip_recursive on | off;'
                          },
                          {
                            'referer_hash_bucket_size' => 'referer_hash_bucket_size size;'
                          },
                          {
                            'referer_hash_max_size' => 'referer_hash_max_size size;'
                          },
                          {
                            'valid_referers' => 'valid_referers none | blocked | server_names | string...;'
                          },
                          {
                            'break' => 'break;'
                          },
                          {
                            'if' => 'if ( condition ) { ... }'
                          },
                          {
                            'return' => 'return code [ text ]; return code URL; return URL;'
                          },
                          {
                            'rewrite' => 'rewrite regex replacement [ flag ];'
                          },
                          {
                            'rewrite_log' => 'rewrite_log on | off;'
                          },
                          {
                            'set' => 'set $variable value;'
                          },
                          {
                            'uninitialized_variable_warn' => 'uninitialized_variable_warn on | off;'
                          },
                          {
                            'scgi_bind' => 'scgi_bind address | off;'
                          },
                          {
                            'scgi_buffer_size' => 'scgi_buffer_size size;'
                          },
                          {
                            'scgi_buffering' => 'scgi_buffering on | off;'
                          },
                          {
                            'scgi_buffers' => 'scgi_buffers number size;'
                          },
                          {
                            'scgi_busy_buffers_size' => 'scgi_busy_buffers_size size;'
                          },
                          {
                            'scgi_cache' => 'scgi_cache zone | off;'
                          },
                          {
                            'scgi_cache_bypass' => 'scgi_cache_bypass string...;'
                          },
                          {
                            'scgi_cache_key' => 'scgi_cache_key string;'
                          },
                          {
                            'scgi_cache_lock' => 'scgi_cache_lock on | off;'
                          },
                          {
                            'scgi_cache_lock_age' => 'scgi_cache_lock_age time;'
                          },
                          {
                            'scgi_cache_lock_timeout' => 'scgi_cache_lock_timeout time;'
                          },
                          {
                            'scgi_cache_methods' => 'scgi_cache_methods GET | HEAD | POST...;'
                          },
                          {
                            'scgi_cache_min_uses' => 'scgi_cache_min_uses number;'
                          },
                          {
                            'scgi_cache_purge' => 'scgi_cache_purge string ...;'
                          },
                          {
                            'scgi_cache_revalidate' => 'scgi_cache_revalidate on | off;'
                          },
                          {
                            'scgi_cache_use_stale' => 'scgi_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_503 | http_403 | http_404 | off...;'
                          },
                          {
                            'scgi_cache_valid' => 'scgi_cache_valid [ code...] time;'
                          },
                          {
                            'scgi_connect_timeout' => 'scgi_connect_timeout time;'
                          },
                          {
                            'scgi_force_ranges' => 'scgi_force_ranges on | off;'
                          },
                          {
                            'scgi_hide_header' => 'scgi_hide_header field;'
                          },
                          {
                            'scgi_ignore_client_abort' => 'scgi_ignore_client_abort on | off;'
                          },
                          {
                            'scgi_ignore_headers' => 'scgi_ignore_headers field...;'
                          },
                          {
                            'scgi_intercept_errors' => 'scgi_intercept_errors on | off;'
                          },
                          {
                            'scgi_limit_rate' => 'scgi_limit_rate rate;'
                          },
                          {
                            'scgi_max_temp_file_size' => 'scgi_max_temp_file_size size;'
                          },
                          {
                            'scgi_next_upstream' => 'scgi_next_upstream error | timeout | invalid_header | http_500 | http_503 | http_403 | http_404 | off...;'
                          },
                          {
                            'scgi_next_upstream_timeout' => 'scgi_next_upstream_timeout time;'
                          },
                          {
                            'scgi_next_upstream_tries' => 'scgi_next_upstream_tries number;'
                          },
                          {
                            'scgi_no_cache' => 'scgi_no_cache string...;'
                          },
                          {
                            'scgi_param' => 'scgi_param parameter value [ if_not_empty ];'
                          },
                          {
                            'scgi_pass' => 'scgi_pass address;'
                          },
                          {
                            'scgi_pass_header' => 'scgi_pass_header field;'
                          },
                          {
                            'scgi_read_timeout' => 'scgi_read_timeout time;'
                          },
                          {
                            'scgi_pass_request_body' => 'scgi_pass_request_body on | off;'
                          },
                          {
                            'scgi_pass_request_headers' => 'scgi_pass_request_headers on | off;'
                          },
                          {
                            'scgi_request_buffering' => 'scgi_request_buffering on | off;'
                          },
                          {
                            'scgi_send_timeout' => 'scgi_send_timeout time;'
                          },
                          {
                            'scgi_store' => 'scgi_store on | off | string;'
                          },
                          {
                            'scgi_store_access' => 'scgi_store_access users: permissions...;'
                          },
                          {
                            'scgi_temp_file_write_size' => 'scgi_temp_file_write_size size;'
                          },
                          {
                            'scgi_temp_path' => 'scgi_temp_path path [ level1 [ level2 [ level3 ]]];'
                          },
                          {
                            'secure_link' => 'secure_link expression;'
                          },
                          {
                            'secure_link_md5' => 'secure_link_md5 expression;'
                          },
                          {
                            'secure_link_secret' => 'secure_link_secret word;'
                          },
                          {
                            'session_log' => 'session_log name | off;'
                          },
                          {
                            'spdy_chunk_size' => 'spdy_chunk_size size;'
                          },
                          {
                            'ssi' => 'ssi on | off;'
                          },
                          {
                            'ssi_last_modified' => 'ssi_last_modified on | off;'
                          },
                          {
                            'ssi_min_file_chunk' => 'ssi_min_file_chunk size;'
                          },
                          {
                            'ssi_silent_errors' => 'ssi_silent_errors on | off;'
                          },
                          {
                            'ssi_types' => 'ssi_types mime-type...;'
                          },
                          {
                            'ssi_value_length' => 'ssi_value_length length;'
                          },
                          {
                            'status' => 'status;'
                          },
                          {
                            'status_format' => 'status_format json; status_format jsonp [ callback ];'
                          },
                          {
                            'stub_status' => 'stub_status;'
                          },
                          {
                            'sub_filter' => 'sub_filter string replacement;'
                          },
                          {
                            'sub_filter_last_modified' => 'sub_filter_last_modified on | off;'
                          },
                          {
                            'sub_filter_once' => 'sub_filter_once on | off;'
                          },
                          {
                            'sub_filter_types' => 'sub_filter_types mime-type...;'
                          },
                          {
                            'health_check' => 'health_check [ parameters ];'
                          },
                          {
                            'upstream_conf' => 'upstream_conf;'
                          },
                          {
                            'userid' => 'userid on | v1 | log | off;'
                          },
                          {
                            'userid_domain' => 'userid_domain name | none;'
                          },
                          {
                            'userid_expires' => 'userid_expires time | max | off;'
                          },
                          {
                            'userid_mark' => 'userid_mark letter | digit | = | off;'
                          },
                          {
                            'userid_name' => 'userid_name name;'
                          },
                          {
                            'userid_p3p' => 'userid_p3p string | none;'
                          },
                          {
                            'userid_path' => 'userid_path path;'
                          },
                          {
                            'userid_service' => 'userid_service number;'
                          },
                          {
                            'uwsgi_bind' => 'uwsgi_bind address | off;'
                          },
                          {
                            'uwsgi_buffer_size' => 'uwsgi_buffer_size size;'
                          },
                          {
                            'uwsgi_buffering' => 'uwsgi_buffering on | off;'
                          },
                          {
                            'uwsgi_buffers' => 'uwsgi_buffers number size;'
                          },
                          {
                            'uwsgi_busy_buffers_size' => 'uwsgi_busy_buffers_size size;'
                          },
                          {
                            'uwsgi_cache' => 'uwsgi_cache zone | off;'
                          },
                          {
                            'uwsgi_cache_bypass' => 'uwsgi_cache_bypass string...;'
                          },
                          {
                            'uwsgi_cache_key' => 'uwsgi_cache_key string;'
                          },
                          {
                            'uwsgi_cache_lock' => 'uwsgi_cache_lock on | off;'
                          },
                          {
                            'uwsgi_cache_lock_age' => 'uwsgi_cache_lock_age time;'
                          },
                          {
                            'uwsgi_cache_lock_timeout' => 'uwsgi_cache_lock_timeout time;'
                          },
                          {
                            'uwsgi_cache_methods' => 'uwsgi_cache_methods GET | HEAD | POST...;'
                          },
                          {
                            'uwsgi_cache_min_uses' => 'uwsgi_cache_min_uses number;'
                          },
                          {
                            'uwsgi_cache_purge' => 'uwsgi_cache_purge string ...;'
                          },
                          {
                            'uwsgi_cache_revalidate' => 'uwsgi_cache_revalidate on | off;'
                          },
                          {
                            'uwsgi_cache_use_stale' => 'uwsgi_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_503 | http_403 | http_404 | off...;'
                          },
                          {
                            'uwsgi_cache_valid' => 'uwsgi_cache_valid [ code...] time;'
                          },
                          {
                            'uwsgi_connect_timeout' => 'uwsgi_connect_timeout time;'
                          },
                          {
                            'uwsgi_force_ranges' => 'uwsgi_force_ranges on | off;'
                          },
                          {
                            'uwsgi_hide_header' => 'uwsgi_hide_header field;'
                          },
                          {
                            'uwsgi_ignore_client_abort' => 'uwsgi_ignore_client_abort on | off;'
                          },
                          {
                            'uwsgi_ignore_headers' => 'uwsgi_ignore_headers field...;'
                          },
                          {
                            'uwsgi_intercept_errors' => 'uwsgi_intercept_errors on | off;'
                          },
                          {
                            'uwsgi_limit_rate' => 'uwsgi_limit_rate rate;'
                          },
                          {
                            'uwsgi_max_temp_file_size' => 'uwsgi_max_temp_file_size size;'
                          },
                          {
                            'uwsgi_modifier1' => 'uwsgi_modifier1 number;'
                          },
                          {
                            'uwsgi_modifier2' => 'uwsgi_modifier2 number;'
                          },
                          {
                            'uwsgi_next_upstream' => 'uwsgi_next_upstream error | timeout | invalid_header | http_500 | http_503 | http_403 | http_404 | off...;'
                          },
                          {
                            'uwsgi_next_upstream_timeout' => 'uwsgi_next_upstream_timeout time;'
                          },
                          {
                            'uwsgi_next_upstream_tries' => 'uwsgi_next_upstream_tries number;'
                          },
                          {
                            'uwsgi_no_cache' => 'uwsgi_no_cache string...;'
                          },
                          {
                            'uwsgi_param' => 'uwsgi_param parameter value [ if_not_empty ];'
                          },
                          {
                            'uwsgi_pass' => 'uwsgi_pass [ protocol://] address;'
                          },
                          {
                            'uwsgi_pass_header' => 'uwsgi_pass_header field;'
                          },
                          {
                            'uwsgi_pass_request_body' => 'uwsgi_pass_request_body on | off;'
                          },
                          {
                            'uwsgi_pass_request_headers' => 'uwsgi_pass_request_headers on | off;'
                          },
                          {
                            'uwsgi_read_timeout' => 'uwsgi_read_timeout time;'
                          },
                          {
                            'uwsgi_request_buffering' => 'uwsgi_request_buffering on | off;'
                          },
                          {
                            'uwsgi_send_timeout' => 'uwsgi_send_timeout time;'
                          },
                          {
                            'uwsgi_ssl_certificate' => 'uwsgi_ssl_certificate file;'
                          },
                          {
                            'uwsgi_ssl_certificate_key' => 'uwsgi_ssl_certificate_key file;'
                          },
                          {
                            'uwsgi_ssl_ciphers' => 'uwsgi_ssl_ciphers ciphers;'
                          },
                          {
                            'uwsgi_ssl_crl' => 'uwsgi_ssl_crl file;'
                          },
                          {
                            'uwsgi_ssl_name' => 'uwsgi_ssl_name name;'
                          },
                          {
                            'uwsgi_ssl_password_file' => 'uwsgi_ssl_password_file file;'
                          },
                          {
                            'uwsgi_ssl_protocols' => 'uwsgi_ssl_protocols [ SSLv2 ] [ SSLv3 ] [ TLSv1 ] [ TLSv1.1 ] [ TLSv1.2 ];'
                          },
                          {
                            'uwsgi_ssl_server_name' => 'uwsgi_ssl_server_name on | off;'
                          },
                          {
                            'uwsgi_ssl_session_reuse' => 'uwsgi_ssl_session_reuse on | off;'
                          },
                          {
                            'uwsgi_ssl_trusted_certificate' => 'uwsgi_ssl_trusted_certificate file;'
                          },
                          {
                            'uwsgi_ssl_verify' => 'uwsgi_ssl_verify on | off;'
                          },
                          {
                            'uwsgi_ssl_verify_depth' => 'uwsgi_ssl_verify_depth number;'
                          },
                          {
                            'uwsgi_store' => 'uwsgi_store on | off | string;'
                          },
                          {
                            'uwsgi_store_access' => 'uwsgi_store_access users: permissions...;'
                          },
                          {
                            'uwsgi_temp_file_write_size' => 'uwsgi_temp_file_write_size size;'
                          },
                          {
                            'uwsgi_temp_path' => 'uwsgi_temp_path path [ level1 [ level2 [ level3 ]]];'
                          },
                          {
                            'xml_entities' => 'xml_entities path;'
                          },
                          {
                            'xslt_last_modified' => 'xslt_last_modified on | off;'
                          },
                          {
                            'xslt_param' => 'xslt_param parameter value;'
                          },
                          {
                            'xslt_string_param' => 'xslt_string_param parameter value;'
                          },
                          {
                            'xslt_stylesheet' => 'xslt_stylesheet stylesheet [ parameter = value...];'
                          },
                          {
                            'xslt_types' => 'xslt_types mime-type...;'
                          },
                          {
                            'error_log' => 'error_log file | stderr | syslog: server = address [, parameter = value ] | memory: size [ debug | info | notice | warn | error | crit | alert | emerg ];'
                          }
                        ],
          'main' => [
                      {
                        'http' => 'http { ... }'
                      },
                      {
                        'mail' => 'mail { ... }'
                      },
                      {
                        'stream' => 'stream { ... }'
                      },
                      {
                        'daemon' => 'daemon on | off;'
                      },
                      {
                        'debug_points' => 'debug_points abort | stop;'
                      },
                      {
                        'error_log' => 'error_log file | stderr | syslog: server = address [, parameter = value ] | memory: size [ debug | info | notice | warn | error | crit | alert | emerg ];'
                      },
                      {
                        'env' => 'env variable [= value ];'
                      },
                      {
                        'events' => 'events { ... }'
                      },
                      {
                        'lock_file' => 'lock_file file;'
                      },
                      {
                        'master_process' => 'master_process on | off;'
                      },
                      {
                        'pcre_jit' => 'pcre_jit on | off;'
                      },
                      {
                        'pid' => 'pid file;'
                      },
                      {
                        'ssl_engine' => 'ssl_engine device;'
                      },
                      {
                        'thread_pool' => 'thread_pool name threads = number [ max_queue = number ];'
                      },
                      {
                        'timer_resolution' => 'timer_resolution interval;'
                      },
                      {
                        'user' => 'user user [ group ];'
                      },
                      {
                        'worker_cpu_affinity' => 'worker_cpu_affinity cpumask...;'
                      },
                      {
                        'worker_priority' => 'worker_priority number;'
                      },
                      {
                        'worker_processes' => 'worker_processes number | auto;'
                      },
                      {
                        'worker_rlimit_core' => 'worker_rlimit_core size;'
                      },
                      {
                        'worker_rlimit_nofile' => 'worker_rlimit_nofile number;'
                      },
                      {
                        'working_directory' => 'working_directory directory;'
                      }
                    ],
          'limit_except' => [
                              {
                                'allow' => 'allow address | CIDR | unix: | all;'
                              },
                              {
                                'deny' => 'deny address | CIDR | unix: | all;'
                              },
                              {
                                'auth_basic' => 'auth_basic string | off;'
                              },
                              {
                                'auth_basic_user_file' => 'auth_basic_user_file file;'
                              },
                              {
                                'access_log' => 'access_log path [ format [ buffer = size [ flush = time ]] [ if = condition ]]; access_log path format gzip[= level ] [ buffer = size ] [ flush = time ] [ if = condition ]; access_log syslog: server = address [, parameter = value ] [ format [ if = condition ]]; access_log off;'
                              },
                              {
                                'perl' => 'perl module:: function |\'sub { ... }\';'
                              },
                              {
                                'proxy_pass' => 'proxy_pass URL;'
                              }
                            ],
          'mail' => [
                      {
                        'resolver' => 'resolver address... [ valid = time ]; resolver off;'
                      },
                      {
                        'resolver_timeout' => 'resolver_timeout time;'
                      },
                      {
                        'server' => 'server { ... }'
                      },
                      {
                        'server_name' => 'server_name name;'
                      },
                      {
                        'timeout' => 'timeout time;'
                      },
                      {
                        'auth_http' => 'auth_http URL;'
                      },
                      {
                        'auth_http_header' => 'auth_http_header header value;'
                      },
                      {
                        'auth_http_pass_client_cert' => 'auth_http_pass_client_cert on | off;'
                      },
                      {
                        'auth_http_timeout' => 'auth_http_timeout time;'
                      },
                      {
                        'proxy_buffer' => 'proxy_buffer size;'
                      },
                      {
                        'proxy_pass_error_message' => 'proxy_pass_error_message on | off;'
                      },
                      {
                        'proxy_timeout' => 'proxy_timeout timeout;'
                      },
                      {
                        'xclient' => 'xclient on | off;'
                      },
                      {
                        'ssl' => 'ssl on | off;'
                      },
                      {
                        'ssl_certificate' => 'ssl_certificate file;'
                      },
                      {
                        'ssl_certificate_key' => 'ssl_certificate_key file;'
                      },
                      {
                        'ssl_ciphers' => 'ssl_ciphers ciphers;'
                      },
                      {
                        'ssl_client_certificate' => 'ssl_client_certificate file;'
                      },
                      {
                        'ssl_crl' => 'ssl_crl file;'
                      },
                      {
                        'ssl_dhparam' => 'ssl_dhparam file;'
                      },
                      {
                        'ssl_ecdh_curve' => 'ssl_ecdh_curve curve;'
                      },
                      {
                        'ssl_password_file' => 'ssl_password_file file;'
                      },
                      {
                        'ssl_prefer_server_ciphers' => 'ssl_prefer_server_ciphers on | off;'
                      },
                      {
                        'ssl_protocols' => 'ssl_protocols [ SSLv2 ] [ SSLv3 ] [ TLSv1 ] [ TLSv1.1 ] [ TLSv1.2 ];'
                      },
                      {
                        'ssl_session_cache' => 'ssl_session_cache off | none | [ builtin [: size ]] [ shared: name: size ];'
                      },
                      {
                        'ssl_session_ticket_key' => 'ssl_session_ticket_key file;'
                      },
                      {
                        'ssl_session_tickets' => 'ssl_session_tickets on | off;'
                      },
                      {
                        'ssl_session_timeout' => 'ssl_session_timeout time;'
                      },
                      {
                        'ssl_trusted_certificate' => 'ssl_trusted_certificate file;'
                      },
                      {
                        'ssl_verify_client' => 'ssl_verify_client on | off | optional | optional_no_ca;'
                      },
                      {
                        'ssl_verify_depth' => 'ssl_verify_depth number;'
                      },
                      {
                        'starttls' => 'starttls on | off | only;'
                      },
                      {
                        'imap_auth' => 'imap_auth method...;'
                      },
                      {
                        'imap_capabilities' => 'imap_capabilities extension...;'
                      },
                      {
                        'imap_client_buffer' => 'imap_client_buffer size;'
                      },
                      {
                        'pop3_auth' => 'pop3_auth method...;'
                      },
                      {
                        'pop3_capabilities' => 'pop3_capabilities extension...;'
                      },
                      {
                        'smtp_auth' => 'smtp_auth method...;'
                      },
                      {
                        'smtp_capabilities' => 'smtp_capabilities extension...;'
                      }
                    ],
          'if' => [
                    {
                      'break' => 'break;'
                    },
                    {
                      'return' => 'return code [ text ]; return code URL; return URL;'
                    },
                    {
                      'rewrite' => 'rewrite regex replacement [ flag ];'
                    },
                    {
                      'rewrite_log' => 'rewrite_log on | off;'
                    },
                    {
                      'set' => 'set $variable value;'
                    },
                    {
                      'uninitialized_variable_warn' => 'uninitialized_variable_warn on | off;'
                    }
                  ],
          'stream' => [
                        {
                          'resolver' => 'resolver address... [ valid = time ] [ ipv6 = on | off ];'
                        },
                        {
                          'resolver_timeout' => 'resolver_timeout time;'
                        },
                        {
                          'server' => 'server { ... }'
                        },
                        {
                          'proxy_connect_timeout' => 'proxy_connect_timeout time;'
                        },
                        {
                          'proxy_downstream_buffer' => 'proxy_downstream_buffer size;'
                        },
                        {
                          'proxy_next_upstream' => 'proxy_next_upstream on | off;'
                        },
                        {
                          'proxy_next_upstream_timeout' => 'proxy_next_upstream_timeout time;'
                        },
                        {
                          'proxy_next_upstream_tries' => 'proxy_next_upstream_tries number;'
                        },
                        {
                          'proxy_ssl' => 'proxy_ssl on | off;'
                        },
                        {
                          'proxy_ssl_certificate' => 'proxy_ssl_certificate file;'
                        },
                        {
                          'proxy_ssl_certificate_key' => 'proxy_ssl_certificate_key file;'
                        },
                        {
                          'proxy_ssl_ciphers' => 'proxy_ssl_ciphers ciphers;'
                        },
                        {
                          'proxy_ssl_crl' => 'proxy_ssl_crl file;'
                        },
                        {
                          'proxy_ssl_name' => 'proxy_ssl_name name;'
                        },
                        {
                          'proxy_ssl_password_file' => 'proxy_ssl_password_file file;'
                        },
                        {
                          'proxy_ssl_server_name' => 'proxy_ssl_server_name on | off;'
                        },
                        {
                          'proxy_ssl_session_reuse' => 'proxy_ssl_session_reuse on | off;'
                        },
                        {
                          'proxy_ssl_protocols' => 'proxy_ssl_protocols [ SSLv2 ] [ SSLv3 ] [ TLSv1 ] [ TLSv1.1 ] [ TLSv1.2 ];'
                        },
                        {
                          'proxy_ssl_trusted_certificate' => 'proxy_ssl_trusted_certificate file;'
                        },
                        {
                          'proxy_ssl_verify' => 'proxy_ssl_verify on | off;'
                        },
                        {
                          'proxy_ssl_verify_depth' => 'proxy_ssl_verify_depth number;'
                        },
                        {
                          'proxy_timeout' => 'proxy_timeout timeout;'
                        },
                        {
                          'proxy_upstream_buffer' => 'proxy_upstream_buffer size;'
                        },
                        {
                          'ssl_certificate' => 'ssl_certificate file;'
                        },
                        {
                          'ssl_certificate_key' => 'ssl_certificate_key file;'
                        },
                        {
                          'ssl_ciphers' => 'ssl_ciphers ciphers;'
                        },
                        {
                          'ssl_dhparam' => 'ssl_dhparam file;'
                        },
                        {
                          'ssl_ecdh_curve' => 'ssl_ecdh_curve curve;'
                        },
                        {
                          'ssl_handshake_timeout' => 'ssl_handshake_timeout time;'
                        },
                        {
                          'ssl_password_file' => 'ssl_password_file file;'
                        },
                        {
                          'ssl_prefer_server_ciphers' => 'ssl_prefer_server_ciphers on | off;'
                        },
                        {
                          'ssl_protocols' => 'ssl_protocols [ SSLv2 ] [ SSLv3 ] [ TLSv1 ] [ TLSv1.1 ] [ TLSv1.2 ];'
                        },
                        {
                          'ssl_session_cache' => 'ssl_session_cache off | none | [ builtin [: size ]] [ shared: name: size ];'
                        },
                        {
                          'ssl_session_ticket_key' => 'ssl_session_ticket_key file;'
                        },
                        {
                          'ssl_session_tickets' => 'ssl_session_tickets on | off;'
                        },
                        {
                          'ssl_session_timeout' => 'ssl_session_timeout time;'
                        },
                        {
                          'upstream' => 'upstream name { ... }'
                        },
                        {
                          'health_check_timeout' => 'health_check_timeout timeout;'
                        },
                        {
                          'match' => 'match name { ... }'
                        },
                        {
                          'error_log' => 'error_log file | stderr | syslog: server = address [, parameter = value ] | memory: size [ debug | info | notice | warn | error | crit | alert | emerg ];'
                        }
                      ],
          'http' => [
                      {
                        'aio' => 'aio on | off | threads [ = pool ];'
                      },
                      {
                        'chunked_transfer_encoding' => 'chunked_transfer_encoding on | off;'
                      },
                      {
                        'client_body_buffer_size' => 'client_body_buffer_size size;'
                      },
                      {
                        'client_body_in_file_only' => 'client_body_in_file_only on | clean | off;'
                      },
                      {
                        'client_body_in_single_buffer' => 'client_body_in_single_buffer on | off;'
                      },
                      {
                        'client_body_temp_path' => 'client_body_temp_path path [ level1 [ level2 [ level3 ]]];'
                      },
                      {
                        'client_body_timeout' => 'client_body_timeout time;'
                      },
                      {
                        'client_header_buffer_size' => 'client_header_buffer_size size;'
                      },
                      {
                        'client_header_timeout' => 'client_header_timeout time;'
                      },
                      {
                        'client_max_body_size' => 'client_max_body_size size;'
                      },
                      {
                        'connection_pool_size' => 'connection_pool_size size;'
                      },
                      {
                        'default_type' => 'default_type mime-type;'
                      },
                      {
                        'directio' => 'directio size | off;'
                      },
                      {
                        'directio_alignment' => 'directio_alignment size;'
                      },
                      {
                        'disable_symlinks' => 'disable_symlinks off; disable_symlinks on | if_not_owner [ from = part ];'
                      },
                      {
                        'error_page' => 'error_page code... [ = [ response ]] uri;'
                      },
                      {
                        'etag' => 'etag on | off;'
                      },
                      {
                        'if_modified_since' => 'if_modified_since off | exact | before;'
                      },
                      {
                        'ignore_invalid_headers' => 'ignore_invalid_headers on | off;'
                      },
                      {
                        'keepalive_disable' => 'keepalive_disable none | browser...;'
                      },
                      {
                        'keepalive_requests' => 'keepalive_requests number;'
                      },
                      {
                        'keepalive_timeout' => 'keepalive_timeout timeout [ header_timeout ];'
                      },
                      {
                        'large_client_header_buffers' => 'large_client_header_buffers number size;'
                      },
                      {
                        'limit_rate' => 'limit_rate rate;'
                      },
                      {
                        'limit_rate_after' => 'limit_rate_after size;'
                      },
                      {
                        'lingering_close' => 'lingering_close off | on | always;'
                      },
                      {
                        'lingering_time' => 'lingering_time time;'
                      },
                      {
                        'lingering_timeout' => 'lingering_timeout time;'
                      },
                      {
                        'log_not_found' => 'log_not_found on | off;'
                      },
                      {
                        'log_subrequest' => 'log_subrequest on | off;'
                      },
                      {
                        'max_ranges' => 'max_ranges number;'
                      },
                      {
                        'merge_slashes' => 'merge_slashes on | off;'
                      },
                      {
                        'msie_padding' => 'msie_padding on | off;'
                      },
                      {
                        'msie_refresh' => 'msie_refresh on | off;'
                      },
                      {
                        'open_file_cache' => 'open_file_cache off; open_file_cache max = N [ inactive = time ];'
                      },
                      {
                        'open_file_cache_errors' => 'open_file_cache_errors on | off;'
                      },
                      {
                        'open_file_cache_min_uses' => 'open_file_cache_min_uses number;'
                      },
                      {
                        'open_file_cache_valid' => 'open_file_cache_valid time;'
                      },
                      {
                        'output_buffers' => 'output_buffers number size;'
                      },
                      {
                        'port_in_redirect' => 'port_in_redirect on | off;'
                      },
                      {
                        'postpone_output' => 'postpone_output size;'
                      },
                      {
                        'read_ahead' => 'read_ahead size;'
                      },
                      {
                        'recursive_error_pages' => 'recursive_error_pages on | off;'
                      },
                      {
                        'request_pool_size' => 'request_pool_size size;'
                      },
                      {
                        'reset_timedout_connection' => 'reset_timedout_connection on | off;'
                      },
                      {
                        'resolver' => 'resolver address... [ valid = time ] [ ipv6 = on | off ];'
                      },
                      {
                        'resolver_timeout' => 'resolver_timeout time;'
                      },
                      {
                        'root' => 'root path;'
                      },
                      {
                        'satisfy' => 'satisfy all | any;'
                      },
                      {
                        'send_lowat' => 'send_lowat size;'
                      },
                      {
                        'send_timeout' => 'send_timeout time;'
                      },
                      {
                        'sendfile' => 'sendfile on | off;'
                      },
                      {
                        'sendfile_max_chunk' => 'sendfile_max_chunk size;'
                      },
                      {
                        'server' => 'server { ... }'
                      },
                      {
                        'server_name_in_redirect' => 'server_name_in_redirect on | off;'
                      },
                      {
                        'server_names_hash_bucket_size' => 'server_names_hash_bucket_size size;'
                      },
                      {
                        'server_names_hash_max_size' => 'server_names_hash_max_size size;'
                      },
                      {
                        'server_tokens' => 'server_tokens on | off;'
                      },
                      {
                        'tcp_nodelay' => 'tcp_nodelay on | off;'
                      },
                      {
                        'tcp_nopush' => 'tcp_nopush on | off;'
                      },
                      {
                        'types' => 'types { ... }'
                      },
                      {
                        'types_hash_bucket_size' => 'types_hash_bucket_size size;'
                      },
                      {
                        'types_hash_max_size' => 'types_hash_max_size size;'
                      },
                      {
                        'underscores_in_headers' => 'underscores_in_headers on | off;'
                      },
                      {
                        'variables_hash_bucket_size' => 'variables_hash_bucket_size size;'
                      },
                      {
                        'variables_hash_max_size' => 'variables_hash_max_size size;'
                      },
                      {
                        'allow' => 'allow address | CIDR | unix: | all;'
                      },
                      {
                        'deny' => 'deny address | CIDR | unix: | all;'
                      },
                      {
                        'add_before_body' => 'add_before_body uri;'
                      },
                      {
                        'add_after_body' => 'add_after_body uri;'
                      },
                      {
                        'addition_types' => 'addition_types mime-type...;'
                      },
                      {
                        'auth_basic' => 'auth_basic string | off;'
                      },
                      {
                        'auth_basic_user_file' => 'auth_basic_user_file file;'
                      },
                      {
                        'auth_request' => 'auth_request uri | off;'
                      },
                      {
                        'auth_request_set' => 'auth_request_set variable value;'
                      },
                      {
                        'autoindex' => 'autoindex on | off;'
                      },
                      {
                        'autoindex_exact_size' => 'autoindex_exact_size on | off;'
                      },
                      {
                        'autoindex_format' => 'autoindex_format html | xml | json | jsonp;'
                      },
                      {
                        'autoindex_localtime' => 'autoindex_localtime on | off;'
                      },
                      {
                        'ancient_browser' => 'ancient_browser string...;'
                      },
                      {
                        'ancient_browser_value' => 'ancient_browser_value string;'
                      },
                      {
                        'modern_browser' => 'modern_browser browser version; modern_browser unlisted;'
                      },
                      {
                        'modern_browser_value' => 'modern_browser_value string;'
                      },
                      {
                        'charset' => 'charset charset | off;'
                      },
                      {
                        'charset_map' => 'charset_map charset1 charset2 { ... }'
                      },
                      {
                        'charset_types' => 'charset_types mime-type...;'
                      },
                      {
                        'override_charset' => 'override_charset on | off;'
                      },
                      {
                        'source_charset' => 'source_charset charset;'
                      },
                      {
                        'dav_access' => 'dav_access users: permissions...;'
                      },
                      {
                        'dav_methods' => 'dav_methods off | method...;'
                      },
                      {
                        'create_full_put_path' => 'create_full_put_path on | off;'
                      },
                      {
                        'min_delete_depth' => 'min_delete_depth number;'
                      },
                      {
                        'f4f_buffer_size' => 'f4f_buffer_size size;'
                      },
                      {
                        'fastcgi_bind' => 'fastcgi_bind address | off;'
                      },
                      {
                        'fastcgi_buffer_size' => 'fastcgi_buffer_size size;'
                      },
                      {
                        'fastcgi_buffering' => 'fastcgi_buffering on | off;'
                      },
                      {
                        'fastcgi_buffers' => 'fastcgi_buffers number size;'
                      },
                      {
                        'fastcgi_busy_buffers_size' => 'fastcgi_busy_buffers_size size;'
                      },
                      {
                        'fastcgi_cache' => 'fastcgi_cache zone | off;'
                      },
                      {
                        'fastcgi_cache_bypass' => 'fastcgi_cache_bypass string...;'
                      },
                      {
                        'fastcgi_cache_key' => 'fastcgi_cache_key string;'
                      },
                      {
                        'fastcgi_cache_lock' => 'fastcgi_cache_lock on | off;'
                      },
                      {
                        'fastcgi_cache_lock_age' => 'fastcgi_cache_lock_age time;'
                      },
                      {
                        'fastcgi_cache_lock_timeout' => 'fastcgi_cache_lock_timeout time;'
                      },
                      {
                        'fastcgi_cache_methods' => 'fastcgi_cache_methods GET | HEAD | POST...;'
                      },
                      {
                        'fastcgi_cache_min_uses' => 'fastcgi_cache_min_uses number;'
                      },
                      {
                        'fastcgi_cache_path' => 'fastcgi_cache_path path [ levels = levels ] [ use_temp_path = on | off ] keys_zone = name: size [ inactive = time ] [ max_size = size ] [ loader_files = number ] [ loader_sleep = time ] [ loader_threshold = time ];'
                      },
                      {
                        'fastcgi_cache_purge' => 'fastcgi_cache_purge string ...;'
                      },
                      {
                        'fastcgi_cache_revalidate' => 'fastcgi_cache_revalidate on | off;'
                      },
                      {
                        'fastcgi_cache_use_stale' => 'fastcgi_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_503 | http_403 | http_404 | off...;'
                      },
                      {
                        'fastcgi_cache_valid' => 'fastcgi_cache_valid [ code...] time;'
                      },
                      {
                        'fastcgi_catch_stderr' => 'fastcgi_catch_stderr string;'
                      },
                      {
                        'fastcgi_connect_timeout' => 'fastcgi_connect_timeout time;'
                      },
                      {
                        'fastcgi_force_ranges' => 'fastcgi_force_ranges on | off;'
                      },
                      {
                        'fastcgi_hide_header' => 'fastcgi_hide_header field;'
                      },
                      {
                        'fastcgi_ignore_client_abort' => 'fastcgi_ignore_client_abort on | off;'
                      },
                      {
                        'fastcgi_ignore_headers' => 'fastcgi_ignore_headers field...;'
                      },
                      {
                        'fastcgi_index' => 'fastcgi_index name;'
                      },
                      {
                        'fastcgi_intercept_errors' => 'fastcgi_intercept_errors on | off;'
                      },
                      {
                        'fastcgi_keep_conn' => 'fastcgi_keep_conn on | off;'
                      },
                      {
                        'fastcgi_limit_rate' => 'fastcgi_limit_rate rate;'
                      },
                      {
                        'fastcgi_max_temp_file_size' => 'fastcgi_max_temp_file_size size;'
                      },
                      {
                        'fastcgi_next_upstream' => 'fastcgi_next_upstream error | timeout | invalid_header | http_500 | http_503 | http_403 | http_404 | off...;'
                      },
                      {
                        'fastcgi_next_upstream_timeout' => 'fastcgi_next_upstream_timeout time;'
                      },
                      {
                        'fastcgi_next_upstream_tries' => 'fastcgi_next_upstream_tries number;'
                      },
                      {
                        'fastcgi_no_cache' => 'fastcgi_no_cache string...;'
                      },
                      {
                        'fastcgi_param' => 'fastcgi_param parameter value [ if_not_empty ];'
                      },
                      {
                        'fastcgi_pass_header' => 'fastcgi_pass_header field;'
                      },
                      {
                        'fastcgi_read_timeout' => 'fastcgi_read_timeout time;'
                      },
                      {
                        'fastcgi_pass_request_body' => 'fastcgi_pass_request_body on | off;'
                      },
                      {
                        'fastcgi_pass_request_headers' => 'fastcgi_pass_request_headers on | off;'
                      },
                      {
                        'fastcgi_request_buffering' => 'fastcgi_request_buffering on | off;'
                      },
                      {
                        'fastcgi_send_lowat' => 'fastcgi_send_lowat size;'
                      },
                      {
                        'fastcgi_send_timeout' => 'fastcgi_send_timeout time;'
                      },
                      {
                        'fastcgi_store' => 'fastcgi_store on | off | string;'
                      },
                      {
                        'fastcgi_store_access' => 'fastcgi_store_access users: permissions...;'
                      },
                      {
                        'fastcgi_temp_file_write_size' => 'fastcgi_temp_file_write_size size;'
                      },
                      {
                        'fastcgi_temp_path' => 'fastcgi_temp_path path [ level1 [ level2 [ level3 ]]];'
                      },
                      {
                        'geo' => 'geo [ $address ] $variable { ... }'
                      },
                      {
                        'geoip_country' => 'geoip_country file;'
                      },
                      {
                        'geoip_city' => 'geoip_city file;'
                      },
                      {
                        'geoip_org' => 'geoip_org file;'
                      },
                      {
                        'geoip_proxy' => 'geoip_proxy address | CIDR;'
                      },
                      {
                        'geoip_proxy_recursive' => 'geoip_proxy_recursive on | off;'
                      },
                      {
                        'gunzip' => 'gunzip on | off;'
                      },
                      {
                        'gunzip_buffers' => 'gunzip_buffers number size;'
                      },
                      {
                        'gzip' => 'gzip on | off;'
                      },
                      {
                        'gzip_buffers' => 'gzip_buffers number size;'
                      },
                      {
                        'gzip_comp_level' => 'gzip_comp_level level;'
                      },
                      {
                        'gzip_disable' => 'gzip_disable regex...;'
                      },
                      {
                        'gzip_min_length' => 'gzip_min_length length;'
                      },
                      {
                        'gzip_http_version' => 'gzip_http_version 1.0 | 1.1;'
                      },
                      {
                        'gzip_proxied' => 'gzip_proxied off | expired | no-cache | no-store | private | no_last_modified | no_etag | auth | any...;'
                      },
                      {
                        'gzip_types' => 'gzip_types mime-type...;'
                      },
                      {
                        'gzip_vary' => 'gzip_vary on | off;'
                      },
                      {
                        'gzip_static' => 'gzip_static on | off | always;'
                      },
                      {
                        'add_header' => 'add_header name value [ always ];'
                      },
                      {
                        'expires' => 'expires [ modified ] time; expires epoch | max | off;'
                      },
                      {
                        'hls_buffers' => 'hls_buffers number size;'
                      },
                      {
                        'hls_forward_args' => 'hls_forward_args on | off;'
                      },
                      {
                        'hls_fragment' => 'hls_fragment time;'
                      },
                      {
                        'hls_mp4_buffer_size' => 'hls_mp4_buffer_size size;'
                      },
                      {
                        'hls_mp4_max_buffer_size' => 'hls_mp4_max_buffer_size size;'
                      },
                      {
                        'image_filter_buffer' => 'image_filter_buffer size;'
                      },
                      {
                        'image_filter_interlace' => 'image_filter_interlace on | off;'
                      },
                      {
                        'image_filter_jpeg_quality' => 'image_filter_jpeg_quality quality;'
                      },
                      {
                        'image_filter_sharpen' => 'image_filter_sharpen percent;'
                      },
                      {
                        'image_filter_transparency' => 'image_filter_transparency on | off;'
                      },
                      {
                        'index' => 'index file...;'
                      },
                      {
                        'limit_conn' => 'limit_conn zone number;'
                      },
                      {
                        'limit_conn_log_level' => 'limit_conn_log_level info | notice | warn | error;'
                      },
                      {
                        'limit_conn_status' => 'limit_conn_status code;'
                      },
                      {
                        'limit_conn_zone' => 'limit_conn_zone key zone = name: size;'
                      },
                      {
                        'limit_zone' => 'limit_zone name $variable size;'
                      },
                      {
                        'limit_req' => 'limit_req zone = name [ burst = number ] [ nodelay ];'
                      },
                      {
                        'limit_req_log_level' => 'limit_req_log_level info | notice | warn | error;'
                      },
                      {
                        'limit_req_status' => 'limit_req_status code;'
                      },
                      {
                        'limit_req_zone' => 'limit_req_zone key zone = name: size rate = rate;'
                      },
                      {
                        'access_log' => 'access_log path [ format [ buffer = size [ flush = time ]] [ if = condition ]]; access_log path format gzip[= level ] [ buffer = size ] [ flush = time ] [ if = condition ]; access_log syslog: server = address [, parameter = value ] [ format [ if = condition ]]; access_log off;'
                      },
                      {
                        'log_format' => 'log_format name string...;'
                      },
                      {
                        'open_log_file_cache' => 'open_log_file_cache max = N [ inactive = time ] [ min_uses = N ] [ valid = time ]; open_log_file_cache off;'
                      },
                      {
                        'map' => 'map string $variable { ... }'
                      },
                      {
                        'map_hash_bucket_size' => 'map_hash_bucket_size size;'
                      },
                      {
                        'map_hash_max_size' => 'map_hash_max_size size;'
                      },
                      {
                        'memcached_bind' => 'memcached_bind address | off;'
                      },
                      {
                        'memcached_buffer_size' => 'memcached_buffer_size size;'
                      },
                      {
                        'memcached_connect_timeout' => 'memcached_connect_timeout time;'
                      },
                      {
                        'memcached_force_ranges' => 'memcached_force_ranges on | off;'
                      },
                      {
                        'memcached_gzip_flag' => 'memcached_gzip_flag flag;'
                      },
                      {
                        'memcached_next_upstream' => 'memcached_next_upstream error | timeout | invalid_response | not_found | off...;'
                      },
                      {
                        'memcached_next_upstream_timeout' => 'memcached_next_upstream_timeout time;'
                      },
                      {
                        'memcached_next_upstream_tries' => 'memcached_next_upstream_tries number;'
                      },
                      {
                        'memcached_read_timeout' => 'memcached_read_timeout time;'
                      },
                      {
                        'memcached_send_timeout' => 'memcached_send_timeout time;'
                      },
                      {
                        'mp4_buffer_size' => 'mp4_buffer_size size;'
                      },
                      {
                        'mp4_max_buffer_size' => 'mp4_max_buffer_size size;'
                      },
                      {
                        'mp4_limit_rate' => 'mp4_limit_rate on | off | factor;'
                      },
                      {
                        'mp4_limit_rate_after' => 'mp4_limit_rate_after time;'
                      },
                      {
                        'perl_modules' => 'perl_modules path;'
                      },
                      {
                        'perl_require' => 'perl_require module;'
                      },
                      {
                        'perl_set' => 'perl_set $variable module:: function |\'sub { ... }\';'
                      },
                      {
                        'proxy_bind' => 'proxy_bind address | off;'
                      },
                      {
                        'proxy_buffer_size' => 'proxy_buffer_size size;'
                      },
                      {
                        'proxy_buffering' => 'proxy_buffering on | off;'
                      },
                      {
                        'proxy_buffers' => 'proxy_buffers number size;'
                      },
                      {
                        'proxy_busy_buffers_size' => 'proxy_busy_buffers_size size;'
                      },
                      {
                        'proxy_cache' => 'proxy_cache zone | off;'
                      },
                      {
                        'proxy_cache_bypass' => 'proxy_cache_bypass string...;'
                      },
                      {
                        'proxy_cache_key' => 'proxy_cache_key string;'
                      },
                      {
                        'proxy_cache_lock' => 'proxy_cache_lock on | off;'
                      },
                      {
                        'proxy_cache_lock_age' => 'proxy_cache_lock_age time;'
                      },
                      {
                        'proxy_cache_lock_timeout' => 'proxy_cache_lock_timeout time;'
                      },
                      {
                        'proxy_cache_methods' => 'proxy_cache_methods GET | HEAD | POST...;'
                      },
                      {
                        'proxy_cache_min_uses' => 'proxy_cache_min_uses number;'
                      },
                      {
                        'proxy_cache_path' => 'proxy_cache_path path [ levels = levels ] [ use_temp_path = on | off ] keys_zone = name: size [ inactive = time ] [ max_size = size ] [ loader_files = number ] [ loader_sleep = time ] [ loader_threshold = time ];'
                      },
                      {
                        'proxy_cache_purge' => 'proxy_cache_purge string ...;'
                      },
                      {
                        'proxy_cache_revalidate' => 'proxy_cache_revalidate on | off;'
                      },
                      {
                        'proxy_cache_use_stale' => 'proxy_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_502 | http_503 | http_504 | http_403 | http_404 | off...;'
                      },
                      {
                        'proxy_cache_valid' => 'proxy_cache_valid [ code...] time;'
                      },
                      {
                        'proxy_connect_timeout' => 'proxy_connect_timeout time;'
                      },
                      {
                        'proxy_cookie_domain' => 'proxy_cookie_domain off; proxy_cookie_domain domain replacement;'
                      },
                      {
                        'proxy_cookie_path' => 'proxy_cookie_path off; proxy_cookie_path path replacement;'
                      },
                      {
                        'proxy_force_ranges' => 'proxy_force_ranges on | off;'
                      },
                      {
                        'proxy_headers_hash_bucket_size' => 'proxy_headers_hash_bucket_size size;'
                      },
                      {
                        'proxy_headers_hash_max_size' => 'proxy_headers_hash_max_size size;'
                      },
                      {
                        'proxy_hide_header' => 'proxy_hide_header field;'
                      },
                      {
                        'proxy_http_version' => 'proxy_http_version 1.0 | 1.1;'
                      },
                      {
                        'proxy_ignore_client_abort' => 'proxy_ignore_client_abort on | off;'
                      },
                      {
                        'proxy_ignore_headers' => 'proxy_ignore_headers field...;'
                      },
                      {
                        'proxy_intercept_errors' => 'proxy_intercept_errors on | off;'
                      },
                      {
                        'proxy_limit_rate' => 'proxy_limit_rate rate;'
                      },
                      {
                        'proxy_max_temp_file_size' => 'proxy_max_temp_file_size size;'
                      },
                      {
                        'proxy_method' => 'proxy_method method;'
                      },
                      {
                        'proxy_next_upstream' => 'proxy_next_upstream error | timeout | invalid_header | http_500 | http_502 | http_503 | http_504 | http_403 | http_404 | off...;'
                      },
                      {
                        'proxy_next_upstream_timeout' => 'proxy_next_upstream_timeout time;'
                      },
                      {
                        'proxy_next_upstream_tries' => 'proxy_next_upstream_tries number;'
                      },
                      {
                        'proxy_no_cache' => 'proxy_no_cache string...;'
                      },
                      {
                        'proxy_pass_header' => 'proxy_pass_header field;'
                      },
                      {
                        'proxy_read_timeout' => 'proxy_read_timeout time;'
                      },
                      {
                        'proxy_pass_request_body' => 'proxy_pass_request_body on | off;'
                      },
                      {
                        'proxy_pass_request_headers' => 'proxy_pass_request_headers on | off;'
                      },
                      {
                        'proxy_redirect' => 'proxy_redirect default; proxy_redirect off; proxy_redirect redirect replacement;'
                      },
                      {
                        'proxy_request_buffering' => 'proxy_request_buffering on | off;'
                      },
                      {
                        'proxy_send_lowat' => 'proxy_send_lowat size;'
                      },
                      {
                        'proxy_send_timeout' => 'proxy_send_timeout time;'
                      },
                      {
                        'proxy_set_body' => 'proxy_set_body value;'
                      },
                      {
                        'proxy_set_header' => 'proxy_set_header field value;'
                      },
                      {
                        'proxy_ssl_certificate' => 'proxy_ssl_certificate file;'
                      },
                      {
                        'proxy_ssl_certificate_key' => 'proxy_ssl_certificate_key file;'
                      },
                      {
                        'proxy_ssl_ciphers' => 'proxy_ssl_ciphers ciphers;'
                      },
                      {
                        'proxy_ssl_crl' => 'proxy_ssl_crl file;'
                      },
                      {
                        'proxy_ssl_name' => 'proxy_ssl_name name;'
                      },
                      {
                        'proxy_ssl_password_file' => 'proxy_ssl_password_file file;'
                      },
                      {
                        'proxy_ssl_server_name' => 'proxy_ssl_server_name on | off;'
                      },
                      {
                        'proxy_ssl_session_reuse' => 'proxy_ssl_session_reuse on | off;'
                      },
                      {
                        'proxy_ssl_protocols' => 'proxy_ssl_protocols [ SSLv2 ] [ SSLv3 ] [ TLSv1 ] [ TLSv1.1 ] [ TLSv1.2 ];'
                      },
                      {
                        'proxy_ssl_trusted_certificate' => 'proxy_ssl_trusted_certificate file;'
                      },
                      {
                        'proxy_ssl_verify' => 'proxy_ssl_verify on | off;'
                      },
                      {
                        'proxy_ssl_verify_depth' => 'proxy_ssl_verify_depth number;'
                      },
                      {
                        'proxy_store' => 'proxy_store on | off | string;'
                      },
                      {
                        'proxy_store_access' => 'proxy_store_access users: permissions...;'
                      },
                      {
                        'proxy_temp_file_write_size' => 'proxy_temp_file_write_size size;'
                      },
                      {
                        'proxy_temp_path' => 'proxy_temp_path path [ level1 [ level2 [ level3 ]]];'
                      },
                      {
                        'set_real_ip_from' => 'set_real_ip_from address | CIDR | unix:;'
                      },
                      {
                        'real_ip_header' => 'real_ip_header field | X-Real-IP | X-Forwarded-For | proxy_protocol;'
                      },
                      {
                        'real_ip_recursive' => 'real_ip_recursive on | off;'
                      },
                      {
                        'rewrite_log' => 'rewrite_log on | off;'
                      },
                      {
                        'uninitialized_variable_warn' => 'uninitialized_variable_warn on | off;'
                      },
                      {
                        'scgi_bind' => 'scgi_bind address | off;'
                      },
                      {
                        'scgi_buffer_size' => 'scgi_buffer_size size;'
                      },
                      {
                        'scgi_buffering' => 'scgi_buffering on | off;'
                      },
                      {
                        'scgi_buffers' => 'scgi_buffers number size;'
                      },
                      {
                        'scgi_busy_buffers_size' => 'scgi_busy_buffers_size size;'
                      },
                      {
                        'scgi_cache' => 'scgi_cache zone | off;'
                      },
                      {
                        'scgi_cache_bypass' => 'scgi_cache_bypass string...;'
                      },
                      {
                        'scgi_cache_key' => 'scgi_cache_key string;'
                      },
                      {
                        'scgi_cache_lock' => 'scgi_cache_lock on | off;'
                      },
                      {
                        'scgi_cache_lock_age' => 'scgi_cache_lock_age time;'
                      },
                      {
                        'scgi_cache_lock_timeout' => 'scgi_cache_lock_timeout time;'
                      },
                      {
                        'scgi_cache_methods' => 'scgi_cache_methods GET | HEAD | POST...;'
                      },
                      {
                        'scgi_cache_min_uses' => 'scgi_cache_min_uses number;'
                      },
                      {
                        'scgi_cache_path' => 'scgi_cache_path path [ levels = levels ] [ use_temp_path = on | off ] keys_zone = name: size [ inactive = time ] [ max_size = size ] [ loader_files = number ] [ loader_sleep = time ] [ loader_threshold = time ];'
                      },
                      {
                        'scgi_cache_purge' => 'scgi_cache_purge string ...;'
                      },
                      {
                        'scgi_cache_revalidate' => 'scgi_cache_revalidate on | off;'
                      },
                      {
                        'scgi_cache_use_stale' => 'scgi_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_503 | http_403 | http_404 | off...;'
                      },
                      {
                        'scgi_cache_valid' => 'scgi_cache_valid [ code...] time;'
                      },
                      {
                        'scgi_connect_timeout' => 'scgi_connect_timeout time;'
                      },
                      {
                        'scgi_force_ranges' => 'scgi_force_ranges on | off;'
                      },
                      {
                        'scgi_hide_header' => 'scgi_hide_header field;'
                      },
                      {
                        'scgi_ignore_client_abort' => 'scgi_ignore_client_abort on | off;'
                      },
                      {
                        'scgi_ignore_headers' => 'scgi_ignore_headers field...;'
                      },
                      {
                        'scgi_intercept_errors' => 'scgi_intercept_errors on | off;'
                      },
                      {
                        'scgi_limit_rate' => 'scgi_limit_rate rate;'
                      },
                      {
                        'scgi_max_temp_file_size' => 'scgi_max_temp_file_size size;'
                      },
                      {
                        'scgi_next_upstream' => 'scgi_next_upstream error | timeout | invalid_header | http_500 | http_503 | http_403 | http_404 | off...;'
                      },
                      {
                        'scgi_next_upstream_timeout' => 'scgi_next_upstream_timeout time;'
                      },
                      {
                        'scgi_next_upstream_tries' => 'scgi_next_upstream_tries number;'
                      },
                      {
                        'scgi_no_cache' => 'scgi_no_cache string...;'
                      },
                      {
                        'scgi_param' => 'scgi_param parameter value [ if_not_empty ];'
                      },
                      {
                        'scgi_pass_header' => 'scgi_pass_header field;'
                      },
                      {
                        'scgi_read_timeout' => 'scgi_read_timeout time;'
                      },
                      {
                        'scgi_pass_request_body' => 'scgi_pass_request_body on | off;'
                      },
                      {
                        'scgi_pass_request_headers' => 'scgi_pass_request_headers on | off;'
                      },
                      {
                        'scgi_request_buffering' => 'scgi_request_buffering on | off;'
                      },
                      {
                        'scgi_send_timeout' => 'scgi_send_timeout time;'
                      },
                      {
                        'scgi_store' => 'scgi_store on | off | string;'
                      },
                      {
                        'scgi_store_access' => 'scgi_store_access users: permissions...;'
                      },
                      {
                        'scgi_temp_file_write_size' => 'scgi_temp_file_write_size size;'
                      },
                      {
                        'scgi_temp_path' => 'scgi_temp_path path [ level1 [ level2 [ level3 ]]];'
                      },
                      {
                        'secure_link' => 'secure_link expression;'
                      },
                      {
                        'secure_link_md5' => 'secure_link_md5 expression;'
                      },
                      {
                        'session_log_format' => 'session_log_format name string...;'
                      },
                      {
                        'session_log_zone' => 'session_log_zone path zone = name: size [ format = format ] [ timeout = time ] [ id = id ] [ md5 = md5 ] ;'
                      },
                      {
                        'session_log' => 'session_log name | off;'
                      },
                      {
                        'spdy_chunk_size' => 'spdy_chunk_size size;'
                      },
                      {
                        'spdy_headers_comp' => 'spdy_headers_comp level;'
                      },
                      {
                        'split_clients' => 'split_clients string $variable { ... }'
                      },
                      {
                        'ssi' => 'ssi on | off;'
                      },
                      {
                        'ssi_last_modified' => 'ssi_last_modified on | off;'
                      },
                      {
                        'ssi_min_file_chunk' => 'ssi_min_file_chunk size;'
                      },
                      {
                        'ssi_silent_errors' => 'ssi_silent_errors on | off;'
                      },
                      {
                        'ssi_types' => 'ssi_types mime-type...;'
                      },
                      {
                        'ssi_value_length' => 'ssi_value_length length;'
                      },
                      {
                        'ssl' => 'ssl on | off;'
                      },
                      {
                        'ssl_buffer_size' => 'ssl_buffer_size size;'
                      },
                      {
                        'ssl_certificate' => 'ssl_certificate file;'
                      },
                      {
                        'ssl_certificate_key' => 'ssl_certificate_key file;'
                      },
                      {
                        'ssl_ciphers' => 'ssl_ciphers ciphers;'
                      },
                      {
                        'ssl_client_certificate' => 'ssl_client_certificate file;'
                      },
                      {
                        'ssl_crl' => 'ssl_crl file;'
                      },
                      {
                        'ssl_dhparam' => 'ssl_dhparam file;'
                      },
                      {
                        'ssl_ecdh_curve' => 'ssl_ecdh_curve curve;'
                      },
                      {
                        'ssl_password_file' => 'ssl_password_file file;'
                      },
                      {
                        'ssl_prefer_server_ciphers' => 'ssl_prefer_server_ciphers on | off;'
                      },
                      {
                        'ssl_protocols' => 'ssl_protocols [ SSLv2 ] [ SSLv3 ] [ TLSv1 ] [ TLSv1.1 ] [ TLSv1.2 ];'
                      },
                      {
                        'ssl_session_cache' => 'ssl_session_cache off | none | [ builtin [: size ]] [ shared: name: size ];'
                      },
                      {
                        'ssl_session_ticket_key' => 'ssl_session_ticket_key file;'
                      },
                      {
                        'ssl_session_tickets' => 'ssl_session_tickets on | off;'
                      },
                      {
                        'ssl_session_timeout' => 'ssl_session_timeout time;'
                      },
                      {
                        'ssl_stapling' => 'ssl_stapling on | off;'
                      },
                      {
                        'ssl_stapling_file' => 'ssl_stapling_file file;'
                      },
                      {
                        'ssl_stapling_responder' => 'ssl_stapling_responder url;'
                      },
                      {
                        'ssl_stapling_verify' => 'ssl_stapling_verify on | off;'
                      },
                      {
                        'ssl_trusted_certificate' => 'ssl_trusted_certificate file;'
                      },
                      {
                        'ssl_verify_client' => 'ssl_verify_client on | off | optional | optional_no_ca;'
                      },
                      {
                        'ssl_verify_depth' => 'ssl_verify_depth number;'
                      },
                      {
                        'status_format' => 'status_format json; status_format jsonp [ callback ];'
                      },
                      {
                        'sub_filter' => 'sub_filter string replacement;'
                      },
                      {
                        'sub_filter_last_modified' => 'sub_filter_last_modified on | off;'
                      },
                      {
                        'sub_filter_once' => 'sub_filter_once on | off;'
                      },
                      {
                        'sub_filter_types' => 'sub_filter_types mime-type...;'
                      },
                      {
                        'upstream' => 'upstream name { ... }'
                      },
                      {
                        'match' => 'match name { ... }'
                      },
                      {
                        'userid' => 'userid on | v1 | log | off;'
                      },
                      {
                        'userid_domain' => 'userid_domain name | none;'
                      },
                      {
                        'userid_expires' => 'userid_expires time | max | off;'
                      },
                      {
                        'userid_mark' => 'userid_mark letter | digit | = | off;'
                      },
                      {
                        'userid_name' => 'userid_name name;'
                      },
                      {
                        'userid_p3p' => 'userid_p3p string | none;'
                      },
                      {
                        'userid_path' => 'userid_path path;'
                      },
                      {
                        'userid_service' => 'userid_service number;'
                      },
                      {
                        'uwsgi_bind' => 'uwsgi_bind address | off;'
                      },
                      {
                        'uwsgi_buffer_size' => 'uwsgi_buffer_size size;'
                      },
                      {
                        'uwsgi_buffering' => 'uwsgi_buffering on | off;'
                      },
                      {
                        'uwsgi_buffers' => 'uwsgi_buffers number size;'
                      },
                      {
                        'uwsgi_busy_buffers_size' => 'uwsgi_busy_buffers_size size;'
                      },
                      {
                        'uwsgi_cache' => 'uwsgi_cache zone | off;'
                      },
                      {
                        'uwsgi_cache_bypass' => 'uwsgi_cache_bypass string...;'
                      },
                      {
                        'uwsgi_cache_key' => 'uwsgi_cache_key string;'
                      },
                      {
                        'uwsgi_cache_lock' => 'uwsgi_cache_lock on | off;'
                      },
                      {
                        'uwsgi_cache_lock_age' => 'uwsgi_cache_lock_age time;'
                      },
                      {
                        'uwsgi_cache_lock_timeout' => 'uwsgi_cache_lock_timeout time;'
                      },
                      {
                        'uwsgi_cache_methods' => 'uwsgi_cache_methods GET | HEAD | POST...;'
                      },
                      {
                        'uwsgi_cache_min_uses' => 'uwsgi_cache_min_uses number;'
                      },
                      {
                        'uwsgi_cache_path' => 'uwsgi_cache_path path [ levels = levels ] [ use_temp_path = on | off ] keys_zone = name: size [ inactive = time ] [ max_size = size ] [ loader_files = number ] [ loader_sleep = time ] [ loader_threshold = time ];'
                      },
                      {
                        'uwsgi_cache_purge' => 'uwsgi_cache_purge string ...;'
                      },
                      {
                        'uwsgi_cache_revalidate' => 'uwsgi_cache_revalidate on | off;'
                      },
                      {
                        'uwsgi_cache_use_stale' => 'uwsgi_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_503 | http_403 | http_404 | off...;'
                      },
                      {
                        'uwsgi_cache_valid' => 'uwsgi_cache_valid [ code...] time;'
                      },
                      {
                        'uwsgi_connect_timeout' => 'uwsgi_connect_timeout time;'
                      },
                      {
                        'uwsgi_force_ranges' => 'uwsgi_force_ranges on | off;'
                      },
                      {
                        'uwsgi_hide_header' => 'uwsgi_hide_header field;'
                      },
                      {
                        'uwsgi_ignore_client_abort' => 'uwsgi_ignore_client_abort on | off;'
                      },
                      {
                        'uwsgi_ignore_headers' => 'uwsgi_ignore_headers field...;'
                      },
                      {
                        'uwsgi_intercept_errors' => 'uwsgi_intercept_errors on | off;'
                      },
                      {
                        'uwsgi_limit_rate' => 'uwsgi_limit_rate rate;'
                      },
                      {
                        'uwsgi_max_temp_file_size' => 'uwsgi_max_temp_file_size size;'
                      },
                      {
                        'uwsgi_modifier1' => 'uwsgi_modifier1 number;'
                      },
                      {
                        'uwsgi_modifier2' => 'uwsgi_modifier2 number;'
                      },
                      {
                        'uwsgi_next_upstream' => 'uwsgi_next_upstream error | timeout | invalid_header | http_500 | http_503 | http_403 | http_404 | off...;'
                      },
                      {
                        'uwsgi_next_upstream_timeout' => 'uwsgi_next_upstream_timeout time;'
                      },
                      {
                        'uwsgi_next_upstream_tries' => 'uwsgi_next_upstream_tries number;'
                      },
                      {
                        'uwsgi_no_cache' => 'uwsgi_no_cache string...;'
                      },
                      {
                        'uwsgi_param' => 'uwsgi_param parameter value [ if_not_empty ];'
                      },
                      {
                        'uwsgi_pass_header' => 'uwsgi_pass_header field;'
                      },
                      {
                        'uwsgi_pass_request_body' => 'uwsgi_pass_request_body on | off;'
                      },
                      {
                        'uwsgi_pass_request_headers' => 'uwsgi_pass_request_headers on | off;'
                      },
                      {
                        'uwsgi_read_timeout' => 'uwsgi_read_timeout time;'
                      },
                      {
                        'uwsgi_request_buffering' => 'uwsgi_request_buffering on | off;'
                      },
                      {
                        'uwsgi_send_timeout' => 'uwsgi_send_timeout time;'
                      },
                      {
                        'uwsgi_ssl_certificate' => 'uwsgi_ssl_certificate file;'
                      },
                      {
                        'uwsgi_ssl_certificate_key' => 'uwsgi_ssl_certificate_key file;'
                      },
                      {
                        'uwsgi_ssl_ciphers' => 'uwsgi_ssl_ciphers ciphers;'
                      },
                      {
                        'uwsgi_ssl_crl' => 'uwsgi_ssl_crl file;'
                      },
                      {
                        'uwsgi_ssl_name' => 'uwsgi_ssl_name name;'
                      },
                      {
                        'uwsgi_ssl_password_file' => 'uwsgi_ssl_password_file file;'
                      },
                      {
                        'uwsgi_ssl_protocols' => 'uwsgi_ssl_protocols [ SSLv2 ] [ SSLv3 ] [ TLSv1 ] [ TLSv1.1 ] [ TLSv1.2 ];'
                      },
                      {
                        'uwsgi_ssl_server_name' => 'uwsgi_ssl_server_name on | off;'
                      },
                      {
                        'uwsgi_ssl_session_reuse' => 'uwsgi_ssl_session_reuse on | off;'
                      },
                      {
                        'uwsgi_ssl_trusted_certificate' => 'uwsgi_ssl_trusted_certificate file;'
                      },
                      {
                        'uwsgi_ssl_verify' => 'uwsgi_ssl_verify on | off;'
                      },
                      {
                        'uwsgi_ssl_verify_depth' => 'uwsgi_ssl_verify_depth number;'
                      },
                      {
                        'uwsgi_store' => 'uwsgi_store on | off | string;'
                      },
                      {
                        'uwsgi_store_access' => 'uwsgi_store_access users: permissions...;'
                      },
                      {
                        'uwsgi_temp_file_write_size' => 'uwsgi_temp_file_write_size size;'
                      },
                      {
                        'uwsgi_temp_path' => 'uwsgi_temp_path path [ level1 [ level2 [ level3 ]]];'
                      },
                      {
                        'xml_entities' => 'xml_entities path;'
                      },
                      {
                        'xslt_last_modified' => 'xslt_last_modified on | off;'
                      },
                      {
                        'xslt_param' => 'xslt_param parameter value;'
                      },
                      {
                        'xslt_string_param' => 'xslt_string_param parameter value;'
                      },
                      {
                        'xslt_types' => 'xslt_types mime-type...;'
                      },
                      {
                        'error_log' => 'error_log file | stderr | syslog: server = address [, parameter = value ] | memory: size [ debug | info | notice | warn | error | crit | alert | emerg ];'
                      }
                    ],
          'events' => [
                        {
                          'accept_mutex' => 'accept_mutex on | off;'
                        },
                        {
                          'accept_mutex_delay' => 'accept_mutex_delay time;'
                        },
                        {
                          'debug_connection' => 'debug_connection address | CIDR | unix:;'
                        },
                        {
                          'multi_accept' => 'multi_accept on | off;'
                        },
                        {
                          'use' => 'use method;'
                        },
                        {
                          'worker_aio_requests' => 'worker_aio_requests number;'
                        },
                        {
                          'worker_connections' => 'worker_connections number;'
                        }
                      ],
          'if in location' => [
                                {
                                  'error_page' => 'error_page code... [ = [ response ]] uri;'
                                },
                                {
                                  'limit_rate' => 'limit_rate rate;'
                                },
                                {
                                  'limit_rate_after' => 'limit_rate_after size;'
                                },
                                {
                                  'root' => 'root path;'
                                },
                                {
                                  'sendfile' => 'sendfile on | off;'
                                },
                                {
                                  'charset' => 'charset charset | off;'
                                },
                                {
                                  'override_charset' => 'override_charset on | off;'
                                },
                                {
                                  'source_charset' => 'source_charset charset;'
                                },
                                {
                                  'fastcgi_pass' => 'fastcgi_pass address;'
                                },
                                {
                                  'gzip' => 'gzip on | off;'
                                },
                                {
                                  'add_header' => 'add_header name value [ always ];'
                                },
                                {
                                  'expires' => 'expires [ modified ] time; expires epoch | max | off;'
                                },
                                {
                                  'access_log' => 'access_log path [ format [ buffer = size [ flush = time ]] [ if = condition ]]; access_log path format gzip[= level ] [ buffer = size ] [ flush = time ] [ if = condition ]; access_log syslog: server = address [, parameter = value ] [ format [ if = condition ]]; access_log off;'
                                },
                                {
                                  'memcached_pass' => 'memcached_pass address;'
                                },
                                {
                                  'proxy_pass' => 'proxy_pass URL;'
                                },
                                {
                                  'scgi_pass' => 'scgi_pass address;'
                                },
                                {
                                  'ssi' => 'ssi on | off;'
                                },
                                {
                                  'uwsgi_pass' => 'uwsgi_pass [ protocol://] address;'
                                }
                              ],
          'any' => [
                     {
                       'include' => 'include file | mask;'
                     }
                   ],
          'upstream' => [
                          {
                            'server' => 'server address [ parameters ];'
                          },
                          {
                            'zone' => 'zone name size;'
                          },
                          {
                            'hash' => 'hash key [ consistent ];'
                          },
                          {
                            'ip_hash' => 'ip_hash;'
                          },
                          {
                            'keepalive' => 'keepalive connections;'
                          },
                          {
                            'least_conn' => 'least_conn;'
                          },
                          {
                            'least_time' => 'least_time header | last_byte;'
                          },
                          {
                            'queue' => 'queue number [ timeout = time ];'
                          },
                          {
                            'sticky' => 'sticky cookie name [ expires= time ] [ domain= domain ] [ httponly ] [ secure ] [ path= path ]; sticky route $variable...; sticky learn create= $variable lookup= $variable zone= name: size [ timeout= time ];'
                          },
                          {
                            'sticky_cookie_insert' => 'sticky_cookie_insert name [ expires= time ] [ domain= domain ] [ path= path ];'
                          },
                          {
                            'server' => 'server address [ parameters ];'
                          },
                          {
                            'zone' => 'zone name size;'
                          },
                          {
                            'hash' => 'hash key [ consistent ];'
                          },
                          {
                            'least_conn' => 'least_conn;'
                          },
                          {
                            'least_time' => 'least_time connect | first_byte | last_byte;'
                          }
                        ],
          'server' => [
                        {
                          'aio' => 'aio on | off | threads [ = pool ];'
                        },
                        {
                          'chunked_transfer_encoding' => 'chunked_transfer_encoding on | off;'
                        },
                        {
                          'client_body_buffer_size' => 'client_body_buffer_size size;'
                        },
                        {
                          'client_body_in_file_only' => 'client_body_in_file_only on | clean | off;'
                        },
                        {
                          'client_body_in_single_buffer' => 'client_body_in_single_buffer on | off;'
                        },
                        {
                          'client_body_temp_path' => 'client_body_temp_path path [ level1 [ level2 [ level3 ]]];'
                        },
                        {
                          'client_body_timeout' => 'client_body_timeout time;'
                        },
                        {
                          'client_header_buffer_size' => 'client_header_buffer_size size;'
                        },
                        {
                          'client_header_timeout' => 'client_header_timeout time;'
                        },
                        {
                          'client_max_body_size' => 'client_max_body_size size;'
                        },
                        {
                          'connection_pool_size' => 'connection_pool_size size;'
                        },
                        {
                          'default_type' => 'default_type mime-type;'
                        },
                        {
                          'directio' => 'directio size | off;'
                        },
                        {
                          'directio_alignment' => 'directio_alignment size;'
                        },
                        {
                          'disable_symlinks' => 'disable_symlinks off; disable_symlinks on | if_not_owner [ from = part ];'
                        },
                        {
                          'error_page' => 'error_page code... [ = [ response ]] uri;'
                        },
                        {
                          'etag' => 'etag on | off;'
                        },
                        {
                          'if_modified_since' => 'if_modified_since off | exact | before;'
                        },
                        {
                          'ignore_invalid_headers' => 'ignore_invalid_headers on | off;'
                        },
                        {
                          'keepalive_disable' => 'keepalive_disable none | browser...;'
                        },
                        {
                          'keepalive_requests' => 'keepalive_requests number;'
                        },
                        {
                          'keepalive_timeout' => 'keepalive_timeout timeout [ header_timeout ];'
                        },
                        {
                          'large_client_header_buffers' => 'large_client_header_buffers number size;'
                        },
                        {
                          'limit_rate' => 'limit_rate rate;'
                        },
                        {
                          'limit_rate_after' => 'limit_rate_after size;'
                        },
                        {
                          'lingering_close' => 'lingering_close off | on | always;'
                        },
                        {
                          'lingering_time' => 'lingering_time time;'
                        },
                        {
                          'lingering_timeout' => 'lingering_timeout time;'
                        },
                        {
                          'listen' => 'listen address [: port ] [ default_server ] [ ssl ] [ spdy ] [ proxy_protocol ] [ setfib = number ] [ fastopen = number ] [ backlog = number ] [ rcvbuf = size ] [ sndbuf = size ] [ accept_filter = filter ] [ deferred ] [ bind ] [ ipv6only = on | off ] [ so_keepalive = on | off |[ keepidle ]:[ keepintvl ]:[ keepcnt ]]; listen port [ default_server ] [ ssl ] [ spdy ] [ proxy_protocol ] [ setfib = number ] [ fastopen = number ] [ backlog = number ] [ rcvbuf = size ] [ sndbuf = size ] [ accept_filter = filter ] [ deferred ] [ bind ] [ ipv6only = on | off ] [ so_keepalive = on | off |[ keepidle ]:[ keepintvl ]:[ keepcnt ]]; listen unix: path [ default_server ] [ ssl ] [ spdy ] [ proxy_protocol ] [ backlog = number ] [ rcvbuf = size ] [ sndbuf = size ] [ accept_filter = filter ] [ deferred ] [ bind ] [ so_keepalive = on | off |[ keepidle ]:[ keepintvl ]:[ keepcnt ]];'
                        },
                        {
                          'location' => 'location [ = | ~ | ~* | ^~ ] uri { ... } location @ name { ... }'
                        },
                        {
                          'log_not_found' => 'log_not_found on | off;'
                        },
                        {
                          'log_subrequest' => 'log_subrequest on | off;'
                        },
                        {
                          'max_ranges' => 'max_ranges number;'
                        },
                        {
                          'merge_slashes' => 'merge_slashes on | off;'
                        },
                        {
                          'msie_padding' => 'msie_padding on | off;'
                        },
                        {
                          'msie_refresh' => 'msie_refresh on | off;'
                        },
                        {
                          'open_file_cache' => 'open_file_cache off; open_file_cache max = N [ inactive = time ];'
                        },
                        {
                          'open_file_cache_errors' => 'open_file_cache_errors on | off;'
                        },
                        {
                          'open_file_cache_min_uses' => 'open_file_cache_min_uses number;'
                        },
                        {
                          'open_file_cache_valid' => 'open_file_cache_valid time;'
                        },
                        {
                          'output_buffers' => 'output_buffers number size;'
                        },
                        {
                          'port_in_redirect' => 'port_in_redirect on | off;'
                        },
                        {
                          'postpone_output' => 'postpone_output size;'
                        },
                        {
                          'read_ahead' => 'read_ahead size;'
                        },
                        {
                          'recursive_error_pages' => 'recursive_error_pages on | off;'
                        },
                        {
                          'request_pool_size' => 'request_pool_size size;'
                        },
                        {
                          'reset_timedout_connection' => 'reset_timedout_connection on | off;'
                        },
                        {
                          'resolver' => 'resolver address... [ valid = time ] [ ipv6 = on | off ];'
                        },
                        {
                          'resolver_timeout' => 'resolver_timeout time;'
                        },
                        {
                          'root' => 'root path;'
                        },
                        {
                          'satisfy' => 'satisfy all | any;'
                        },
                        {
                          'send_lowat' => 'send_lowat size;'
                        },
                        {
                          'send_timeout' => 'send_timeout time;'
                        },
                        {
                          'sendfile' => 'sendfile on | off;'
                        },
                        {
                          'sendfile_max_chunk' => 'sendfile_max_chunk size;'
                        },
                        {
                          'server_name' => 'server_name name...;'
                        },
                        {
                          'server_name_in_redirect' => 'server_name_in_redirect on | off;'
                        },
                        {
                          'server_tokens' => 'server_tokens on | off;'
                        },
                        {
                          'tcp_nodelay' => 'tcp_nodelay on | off;'
                        },
                        {
                          'tcp_nopush' => 'tcp_nopush on | off;'
                        },
                        {
                          'try_files' => 'try_files file... uri; try_files file... = code;'
                        },
                        {
                          'types' => 'types { ... }'
                        },
                        {
                          'types_hash_bucket_size' => 'types_hash_bucket_size size;'
                        },
                        {
                          'types_hash_max_size' => 'types_hash_max_size size;'
                        },
                        {
                          'underscores_in_headers' => 'underscores_in_headers on | off;'
                        },
                        {
                          'allow' => 'allow address | CIDR | unix: | all;'
                        },
                        {
                          'deny' => 'deny address | CIDR | unix: | all;'
                        },
                        {
                          'add_before_body' => 'add_before_body uri;'
                        },
                        {
                          'add_after_body' => 'add_after_body uri;'
                        },
                        {
                          'addition_types' => 'addition_types mime-type...;'
                        },
                        {
                          'auth_basic' => 'auth_basic string | off;'
                        },
                        {
                          'auth_basic_user_file' => 'auth_basic_user_file file;'
                        },
                        {
                          'auth_request' => 'auth_request uri | off;'
                        },
                        {
                          'auth_request_set' => 'auth_request_set variable value;'
                        },
                        {
                          'autoindex' => 'autoindex on | off;'
                        },
                        {
                          'autoindex_exact_size' => 'autoindex_exact_size on | off;'
                        },
                        {
                          'autoindex_format' => 'autoindex_format html | xml | json | jsonp;'
                        },
                        {
                          'autoindex_localtime' => 'autoindex_localtime on | off;'
                        },
                        {
                          'ancient_browser' => 'ancient_browser string...;'
                        },
                        {
                          'ancient_browser_value' => 'ancient_browser_value string;'
                        },
                        {
                          'modern_browser' => 'modern_browser browser version; modern_browser unlisted;'
                        },
                        {
                          'modern_browser_value' => 'modern_browser_value string;'
                        },
                        {
                          'charset' => 'charset charset | off;'
                        },
                        {
                          'charset_types' => 'charset_types mime-type...;'
                        },
                        {
                          'override_charset' => 'override_charset on | off;'
                        },
                        {
                          'source_charset' => 'source_charset charset;'
                        },
                        {
                          'dav_access' => 'dav_access users: permissions...;'
                        },
                        {
                          'dav_methods' => 'dav_methods off | method...;'
                        },
                        {
                          'create_full_put_path' => 'create_full_put_path on | off;'
                        },
                        {
                          'min_delete_depth' => 'min_delete_depth number;'
                        },
                        {
                          'f4f_buffer_size' => 'f4f_buffer_size size;'
                        },
                        {
                          'fastcgi_bind' => 'fastcgi_bind address | off;'
                        },
                        {
                          'fastcgi_buffer_size' => 'fastcgi_buffer_size size;'
                        },
                        {
                          'fastcgi_buffering' => 'fastcgi_buffering on | off;'
                        },
                        {
                          'fastcgi_buffers' => 'fastcgi_buffers number size;'
                        },
                        {
                          'fastcgi_busy_buffers_size' => 'fastcgi_busy_buffers_size size;'
                        },
                        {
                          'fastcgi_cache' => 'fastcgi_cache zone | off;'
                        },
                        {
                          'fastcgi_cache_bypass' => 'fastcgi_cache_bypass string...;'
                        },
                        {
                          'fastcgi_cache_key' => 'fastcgi_cache_key string;'
                        },
                        {
                          'fastcgi_cache_lock' => 'fastcgi_cache_lock on | off;'
                        },
                        {
                          'fastcgi_cache_lock_age' => 'fastcgi_cache_lock_age time;'
                        },
                        {
                          'fastcgi_cache_lock_timeout' => 'fastcgi_cache_lock_timeout time;'
                        },
                        {
                          'fastcgi_cache_methods' => 'fastcgi_cache_methods GET | HEAD | POST...;'
                        },
                        {
                          'fastcgi_cache_min_uses' => 'fastcgi_cache_min_uses number;'
                        },
                        {
                          'fastcgi_cache_purge' => 'fastcgi_cache_purge string ...;'
                        },
                        {
                          'fastcgi_cache_revalidate' => 'fastcgi_cache_revalidate on | off;'
                        },
                        {
                          'fastcgi_cache_use_stale' => 'fastcgi_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_503 | http_403 | http_404 | off...;'
                        },
                        {
                          'fastcgi_cache_valid' => 'fastcgi_cache_valid [ code...] time;'
                        },
                        {
                          'fastcgi_catch_stderr' => 'fastcgi_catch_stderr string;'
                        },
                        {
                          'fastcgi_connect_timeout' => 'fastcgi_connect_timeout time;'
                        },
                        {
                          'fastcgi_force_ranges' => 'fastcgi_force_ranges on | off;'
                        },
                        {
                          'fastcgi_hide_header' => 'fastcgi_hide_header field;'
                        },
                        {
                          'fastcgi_ignore_client_abort' => 'fastcgi_ignore_client_abort on | off;'
                        },
                        {
                          'fastcgi_ignore_headers' => 'fastcgi_ignore_headers field...;'
                        },
                        {
                          'fastcgi_index' => 'fastcgi_index name;'
                        },
                        {
                          'fastcgi_intercept_errors' => 'fastcgi_intercept_errors on | off;'
                        },
                        {
                          'fastcgi_keep_conn' => 'fastcgi_keep_conn on | off;'
                        },
                        {
                          'fastcgi_limit_rate' => 'fastcgi_limit_rate rate;'
                        },
                        {
                          'fastcgi_max_temp_file_size' => 'fastcgi_max_temp_file_size size;'
                        },
                        {
                          'fastcgi_next_upstream' => 'fastcgi_next_upstream error | timeout | invalid_header | http_500 | http_503 | http_403 | http_404 | off...;'
                        },
                        {
                          'fastcgi_next_upstream_timeout' => 'fastcgi_next_upstream_timeout time;'
                        },
                        {
                          'fastcgi_next_upstream_tries' => 'fastcgi_next_upstream_tries number;'
                        },
                        {
                          'fastcgi_no_cache' => 'fastcgi_no_cache string...;'
                        },
                        {
                          'fastcgi_param' => 'fastcgi_param parameter value [ if_not_empty ];'
                        },
                        {
                          'fastcgi_pass_header' => 'fastcgi_pass_header field;'
                        },
                        {
                          'fastcgi_read_timeout' => 'fastcgi_read_timeout time;'
                        },
                        {
                          'fastcgi_pass_request_body' => 'fastcgi_pass_request_body on | off;'
                        },
                        {
                          'fastcgi_pass_request_headers' => 'fastcgi_pass_request_headers on | off;'
                        },
                        {
                          'fastcgi_request_buffering' => 'fastcgi_request_buffering on | off;'
                        },
                        {
                          'fastcgi_send_lowat' => 'fastcgi_send_lowat size;'
                        },
                        {
                          'fastcgi_send_timeout' => 'fastcgi_send_timeout time;'
                        },
                        {
                          'fastcgi_store' => 'fastcgi_store on | off | string;'
                        },
                        {
                          'fastcgi_store_access' => 'fastcgi_store_access users: permissions...;'
                        },
                        {
                          'fastcgi_temp_file_write_size' => 'fastcgi_temp_file_write_size size;'
                        },
                        {
                          'fastcgi_temp_path' => 'fastcgi_temp_path path [ level1 [ level2 [ level3 ]]];'
                        },
                        {
                          'gunzip' => 'gunzip on | off;'
                        },
                        {
                          'gunzip_buffers' => 'gunzip_buffers number size;'
                        },
                        {
                          'gzip' => 'gzip on | off;'
                        },
                        {
                          'gzip_buffers' => 'gzip_buffers number size;'
                        },
                        {
                          'gzip_comp_level' => 'gzip_comp_level level;'
                        },
                        {
                          'gzip_disable' => 'gzip_disable regex...;'
                        },
                        {
                          'gzip_min_length' => 'gzip_min_length length;'
                        },
                        {
                          'gzip_http_version' => 'gzip_http_version 1.0 | 1.1;'
                        },
                        {
                          'gzip_proxied' => 'gzip_proxied off | expired | no-cache | no-store | private | no_last_modified | no_etag | auth | any...;'
                        },
                        {
                          'gzip_types' => 'gzip_types mime-type...;'
                        },
                        {
                          'gzip_vary' => 'gzip_vary on | off;'
                        },
                        {
                          'gzip_static' => 'gzip_static on | off | always;'
                        },
                        {
                          'add_header' => 'add_header name value [ always ];'
                        },
                        {
                          'expires' => 'expires [ modified ] time; expires epoch | max | off;'
                        },
                        {
                          'hls_buffers' => 'hls_buffers number size;'
                        },
                        {
                          'hls_forward_args' => 'hls_forward_args on | off;'
                        },
                        {
                          'hls_fragment' => 'hls_fragment time;'
                        },
                        {
                          'hls_mp4_buffer_size' => 'hls_mp4_buffer_size size;'
                        },
                        {
                          'hls_mp4_max_buffer_size' => 'hls_mp4_max_buffer_size size;'
                        },
                        {
                          'image_filter_buffer' => 'image_filter_buffer size;'
                        },
                        {
                          'image_filter_interlace' => 'image_filter_interlace on | off;'
                        },
                        {
                          'image_filter_jpeg_quality' => 'image_filter_jpeg_quality quality;'
                        },
                        {
                          'image_filter_sharpen' => 'image_filter_sharpen percent;'
                        },
                        {
                          'image_filter_transparency' => 'image_filter_transparency on | off;'
                        },
                        {
                          'index' => 'index file...;'
                        },
                        {
                          'limit_conn' => 'limit_conn zone number;'
                        },
                        {
                          'limit_conn_log_level' => 'limit_conn_log_level info | notice | warn | error;'
                        },
                        {
                          'limit_conn_status' => 'limit_conn_status code;'
                        },
                        {
                          'limit_req' => 'limit_req zone = name [ burst = number ] [ nodelay ];'
                        },
                        {
                          'limit_req_log_level' => 'limit_req_log_level info | notice | warn | error;'
                        },
                        {
                          'limit_req_status' => 'limit_req_status code;'
                        },
                        {
                          'access_log' => 'access_log path [ format [ buffer = size [ flush = time ]] [ if = condition ]]; access_log path format gzip[= level ] [ buffer = size ] [ flush = time ] [ if = condition ]; access_log syslog: server = address [, parameter = value ] [ format [ if = condition ]]; access_log off;'
                        },
                        {
                          'open_log_file_cache' => 'open_log_file_cache max = N [ inactive = time ] [ min_uses = N ] [ valid = time ]; open_log_file_cache off;'
                        },
                        {
                          'memcached_bind' => 'memcached_bind address | off;'
                        },
                        {
                          'memcached_buffer_size' => 'memcached_buffer_size size;'
                        },
                        {
                          'memcached_connect_timeout' => 'memcached_connect_timeout time;'
                        },
                        {
                          'memcached_force_ranges' => 'memcached_force_ranges on | off;'
                        },
                        {
                          'memcached_gzip_flag' => 'memcached_gzip_flag flag;'
                        },
                        {
                          'memcached_next_upstream' => 'memcached_next_upstream error | timeout | invalid_response | not_found | off...;'
                        },
                        {
                          'memcached_next_upstream_timeout' => 'memcached_next_upstream_timeout time;'
                        },
                        {
                          'memcached_next_upstream_tries' => 'memcached_next_upstream_tries number;'
                        },
                        {
                          'memcached_read_timeout' => 'memcached_read_timeout time;'
                        },
                        {
                          'memcached_send_timeout' => 'memcached_send_timeout time;'
                        },
                        {
                          'mp4_buffer_size' => 'mp4_buffer_size size;'
                        },
                        {
                          'mp4_max_buffer_size' => 'mp4_max_buffer_size size;'
                        },
                        {
                          'mp4_limit_rate' => 'mp4_limit_rate on | off | factor;'
                        },
                        {
                          'mp4_limit_rate_after' => 'mp4_limit_rate_after time;'
                        },
                        {
                          'proxy_bind' => 'proxy_bind address | off;'
                        },
                        {
                          'proxy_buffer_size' => 'proxy_buffer_size size;'
                        },
                        {
                          'proxy_buffering' => 'proxy_buffering on | off;'
                        },
                        {
                          'proxy_buffers' => 'proxy_buffers number size;'
                        },
                        {
                          'proxy_busy_buffers_size' => 'proxy_busy_buffers_size size;'
                        },
                        {
                          'proxy_cache' => 'proxy_cache zone | off;'
                        },
                        {
                          'proxy_cache_bypass' => 'proxy_cache_bypass string...;'
                        },
                        {
                          'proxy_cache_key' => 'proxy_cache_key string;'
                        },
                        {
                          'proxy_cache_lock' => 'proxy_cache_lock on | off;'
                        },
                        {
                          'proxy_cache_lock_age' => 'proxy_cache_lock_age time;'
                        },
                        {
                          'proxy_cache_lock_timeout' => 'proxy_cache_lock_timeout time;'
                        },
                        {
                          'proxy_cache_methods' => 'proxy_cache_methods GET | HEAD | POST...;'
                        },
                        {
                          'proxy_cache_min_uses' => 'proxy_cache_min_uses number;'
                        },
                        {
                          'proxy_cache_purge' => 'proxy_cache_purge string ...;'
                        },
                        {
                          'proxy_cache_revalidate' => 'proxy_cache_revalidate on | off;'
                        },
                        {
                          'proxy_cache_use_stale' => 'proxy_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_502 | http_503 | http_504 | http_403 | http_404 | off...;'
                        },
                        {
                          'proxy_cache_valid' => 'proxy_cache_valid [ code...] time;'
                        },
                        {
                          'proxy_connect_timeout' => 'proxy_connect_timeout time;'
                        },
                        {
                          'proxy_cookie_domain' => 'proxy_cookie_domain off; proxy_cookie_domain domain replacement;'
                        },
                        {
                          'proxy_cookie_path' => 'proxy_cookie_path off; proxy_cookie_path path replacement;'
                        },
                        {
                          'proxy_force_ranges' => 'proxy_force_ranges on | off;'
                        },
                        {
                          'proxy_headers_hash_bucket_size' => 'proxy_headers_hash_bucket_size size;'
                        },
                        {
                          'proxy_headers_hash_max_size' => 'proxy_headers_hash_max_size size;'
                        },
                        {
                          'proxy_hide_header' => 'proxy_hide_header field;'
                        },
                        {
                          'proxy_http_version' => 'proxy_http_version 1.0 | 1.1;'
                        },
                        {
                          'proxy_ignore_client_abort' => 'proxy_ignore_client_abort on | off;'
                        },
                        {
                          'proxy_ignore_headers' => 'proxy_ignore_headers field...;'
                        },
                        {
                          'proxy_intercept_errors' => 'proxy_intercept_errors on | off;'
                        },
                        {
                          'proxy_limit_rate' => 'proxy_limit_rate rate;'
                        },
                        {
                          'proxy_max_temp_file_size' => 'proxy_max_temp_file_size size;'
                        },
                        {
                          'proxy_method' => 'proxy_method method;'
                        },
                        {
                          'proxy_next_upstream' => 'proxy_next_upstream error | timeout | invalid_header | http_500 | http_502 | http_503 | http_504 | http_403 | http_404 | off...;'
                        },
                        {
                          'proxy_next_upstream_timeout' => 'proxy_next_upstream_timeout time;'
                        },
                        {
                          'proxy_next_upstream_tries' => 'proxy_next_upstream_tries number;'
                        },
                        {
                          'proxy_no_cache' => 'proxy_no_cache string...;'
                        },
                        {
                          'proxy_pass_header' => 'proxy_pass_header field;'
                        },
                        {
                          'proxy_read_timeout' => 'proxy_read_timeout time;'
                        },
                        {
                          'proxy_pass_request_body' => 'proxy_pass_request_body on | off;'
                        },
                        {
                          'proxy_pass_request_headers' => 'proxy_pass_request_headers on | off;'
                        },
                        {
                          'proxy_redirect' => 'proxy_redirect default; proxy_redirect off; proxy_redirect redirect replacement;'
                        },
                        {
                          'proxy_request_buffering' => 'proxy_request_buffering on | off;'
                        },
                        {
                          'proxy_send_lowat' => 'proxy_send_lowat size;'
                        },
                        {
                          'proxy_send_timeout' => 'proxy_send_timeout time;'
                        },
                        {
                          'proxy_set_body' => 'proxy_set_body value;'
                        },
                        {
                          'proxy_set_header' => 'proxy_set_header field value;'
                        },
                        {
                          'proxy_ssl_certificate' => 'proxy_ssl_certificate file;'
                        },
                        {
                          'proxy_ssl_certificate_key' => 'proxy_ssl_certificate_key file;'
                        },
                        {
                          'proxy_ssl_ciphers' => 'proxy_ssl_ciphers ciphers;'
                        },
                        {
                          'proxy_ssl_crl' => 'proxy_ssl_crl file;'
                        },
                        {
                          'proxy_ssl_name' => 'proxy_ssl_name name;'
                        },
                        {
                          'proxy_ssl_password_file' => 'proxy_ssl_password_file file;'
                        },
                        {
                          'proxy_ssl_server_name' => 'proxy_ssl_server_name on | off;'
                        },
                        {
                          'proxy_ssl_session_reuse' => 'proxy_ssl_session_reuse on | off;'
                        },
                        {
                          'proxy_ssl_protocols' => 'proxy_ssl_protocols [ SSLv2 ] [ SSLv3 ] [ TLSv1 ] [ TLSv1.1 ] [ TLSv1.2 ];'
                        },
                        {
                          'proxy_ssl_trusted_certificate' => 'proxy_ssl_trusted_certificate file;'
                        },
                        {
                          'proxy_ssl_verify' => 'proxy_ssl_verify on | off;'
                        },
                        {
                          'proxy_ssl_verify_depth' => 'proxy_ssl_verify_depth number;'
                        },
                        {
                          'proxy_store' => 'proxy_store on | off | string;'
                        },
                        {
                          'proxy_store_access' => 'proxy_store_access users: permissions...;'
                        },
                        {
                          'proxy_temp_file_write_size' => 'proxy_temp_file_write_size size;'
                        },
                        {
                          'proxy_temp_path' => 'proxy_temp_path path [ level1 [ level2 [ level3 ]]];'
                        },
                        {
                          'set_real_ip_from' => 'set_real_ip_from address | CIDR | unix:;'
                        },
                        {
                          'real_ip_header' => 'real_ip_header field | X-Real-IP | X-Forwarded-For | proxy_protocol;'
                        },
                        {
                          'real_ip_recursive' => 'real_ip_recursive on | off;'
                        },
                        {
                          'referer_hash_bucket_size' => 'referer_hash_bucket_size size;'
                        },
                        {
                          'referer_hash_max_size' => 'referer_hash_max_size size;'
                        },
                        {
                          'valid_referers' => 'valid_referers none | blocked | server_names | string...;'
                        },
                        {
                          'break' => 'break;'
                        },
                        {
                          'if' => 'if ( condition ) { ... }'
                        },
                        {
                          'return' => 'return code [ text ]; return code URL; return URL;'
                        },
                        {
                          'rewrite' => 'rewrite regex replacement [ flag ];'
                        },
                        {
                          'rewrite_log' => 'rewrite_log on | off;'
                        },
                        {
                          'set' => 'set $variable value;'
                        },
                        {
                          'uninitialized_variable_warn' => 'uninitialized_variable_warn on | off;'
                        },
                        {
                          'scgi_bind' => 'scgi_bind address | off;'
                        },
                        {
                          'scgi_buffer_size' => 'scgi_buffer_size size;'
                        },
                        {
                          'scgi_buffering' => 'scgi_buffering on | off;'
                        },
                        {
                          'scgi_buffers' => 'scgi_buffers number size;'
                        },
                        {
                          'scgi_busy_buffers_size' => 'scgi_busy_buffers_size size;'
                        },
                        {
                          'scgi_cache' => 'scgi_cache zone | off;'
                        },
                        {
                          'scgi_cache_bypass' => 'scgi_cache_bypass string...;'
                        },
                        {
                          'scgi_cache_key' => 'scgi_cache_key string;'
                        },
                        {
                          'scgi_cache_lock' => 'scgi_cache_lock on | off;'
                        },
                        {
                          'scgi_cache_lock_age' => 'scgi_cache_lock_age time;'
                        },
                        {
                          'scgi_cache_lock_timeout' => 'scgi_cache_lock_timeout time;'
                        },
                        {
                          'scgi_cache_methods' => 'scgi_cache_methods GET | HEAD | POST...;'
                        },
                        {
                          'scgi_cache_min_uses' => 'scgi_cache_min_uses number;'
                        },
                        {
                          'scgi_cache_purge' => 'scgi_cache_purge string ...;'
                        },
                        {
                          'scgi_cache_revalidate' => 'scgi_cache_revalidate on | off;'
                        },
                        {
                          'scgi_cache_use_stale' => 'scgi_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_503 | http_403 | http_404 | off...;'
                        },
                        {
                          'scgi_cache_valid' => 'scgi_cache_valid [ code...] time;'
                        },
                        {
                          'scgi_connect_timeout' => 'scgi_connect_timeout time;'
                        },
                        {
                          'scgi_force_ranges' => 'scgi_force_ranges on | off;'
                        },
                        {
                          'scgi_hide_header' => 'scgi_hide_header field;'
                        },
                        {
                          'scgi_ignore_client_abort' => 'scgi_ignore_client_abort on | off;'
                        },
                        {
                          'scgi_ignore_headers' => 'scgi_ignore_headers field...;'
                        },
                        {
                          'scgi_intercept_errors' => 'scgi_intercept_errors on | off;'
                        },
                        {
                          'scgi_limit_rate' => 'scgi_limit_rate rate;'
                        },
                        {
                          'scgi_max_temp_file_size' => 'scgi_max_temp_file_size size;'
                        },
                        {
                          'scgi_next_upstream' => 'scgi_next_upstream error | timeout | invalid_header | http_500 | http_503 | http_403 | http_404 | off...;'
                        },
                        {
                          'scgi_next_upstream_timeout' => 'scgi_next_upstream_timeout time;'
                        },
                        {
                          'scgi_next_upstream_tries' => 'scgi_next_upstream_tries number;'
                        },
                        {
                          'scgi_no_cache' => 'scgi_no_cache string...;'
                        },
                        {
                          'scgi_param' => 'scgi_param parameter value [ if_not_empty ];'
                        },
                        {
                          'scgi_pass_header' => 'scgi_pass_header field;'
                        },
                        {
                          'scgi_read_timeout' => 'scgi_read_timeout time;'
                        },
                        {
                          'scgi_pass_request_body' => 'scgi_pass_request_body on | off;'
                        },
                        {
                          'scgi_pass_request_headers' => 'scgi_pass_request_headers on | off;'
                        },
                        {
                          'scgi_request_buffering' => 'scgi_request_buffering on | off;'
                        },
                        {
                          'scgi_send_timeout' => 'scgi_send_timeout time;'
                        },
                        {
                          'scgi_store' => 'scgi_store on | off | string;'
                        },
                        {
                          'scgi_store_access' => 'scgi_store_access users: permissions...;'
                        },
                        {
                          'scgi_temp_file_write_size' => 'scgi_temp_file_write_size size;'
                        },
                        {
                          'scgi_temp_path' => 'scgi_temp_path path [ level1 [ level2 [ level3 ]]];'
                        },
                        {
                          'secure_link' => 'secure_link expression;'
                        },
                        {
                          'secure_link_md5' => 'secure_link_md5 expression;'
                        },
                        {
                          'session_log' => 'session_log name | off;'
                        },
                        {
                          'spdy_chunk_size' => 'spdy_chunk_size size;'
                        },
                        {
                          'spdy_headers_comp' => 'spdy_headers_comp level;'
                        },
                        {
                          'ssi' => 'ssi on | off;'
                        },
                        {
                          'ssi_last_modified' => 'ssi_last_modified on | off;'
                        },
                        {
                          'ssi_min_file_chunk' => 'ssi_min_file_chunk size;'
                        },
                        {
                          'ssi_silent_errors' => 'ssi_silent_errors on | off;'
                        },
                        {
                          'ssi_types' => 'ssi_types mime-type...;'
                        },
                        {
                          'ssi_value_length' => 'ssi_value_length length;'
                        },
                        {
                          'ssl' => 'ssl on | off;'
                        },
                        {
                          'ssl_buffer_size' => 'ssl_buffer_size size;'
                        },
                        {
                          'ssl_certificate' => 'ssl_certificate file;'
                        },
                        {
                          'ssl_certificate_key' => 'ssl_certificate_key file;'
                        },
                        {
                          'ssl_ciphers' => 'ssl_ciphers ciphers;'
                        },
                        {
                          'ssl_client_certificate' => 'ssl_client_certificate file;'
                        },
                        {
                          'ssl_crl' => 'ssl_crl file;'
                        },
                        {
                          'ssl_dhparam' => 'ssl_dhparam file;'
                        },
                        {
                          'ssl_ecdh_curve' => 'ssl_ecdh_curve curve;'
                        },
                        {
                          'ssl_password_file' => 'ssl_password_file file;'
                        },
                        {
                          'ssl_prefer_server_ciphers' => 'ssl_prefer_server_ciphers on | off;'
                        },
                        {
                          'ssl_protocols' => 'ssl_protocols [ SSLv2 ] [ SSLv3 ] [ TLSv1 ] [ TLSv1.1 ] [ TLSv1.2 ];'
                        },
                        {
                          'ssl_session_cache' => 'ssl_session_cache off | none | [ builtin [: size ]] [ shared: name: size ];'
                        },
                        {
                          'ssl_session_ticket_key' => 'ssl_session_ticket_key file;'
                        },
                        {
                          'ssl_session_tickets' => 'ssl_session_tickets on | off;'
                        },
                        {
                          'ssl_session_timeout' => 'ssl_session_timeout time;'
                        },
                        {
                          'ssl_stapling' => 'ssl_stapling on | off;'
                        },
                        {
                          'ssl_stapling_file' => 'ssl_stapling_file file;'
                        },
                        {
                          'ssl_stapling_responder' => 'ssl_stapling_responder url;'
                        },
                        {
                          'ssl_stapling_verify' => 'ssl_stapling_verify on | off;'
                        },
                        {
                          'ssl_trusted_certificate' => 'ssl_trusted_certificate file;'
                        },
                        {
                          'ssl_verify_client' => 'ssl_verify_client on | off | optional | optional_no_ca;'
                        },
                        {
                          'ssl_verify_depth' => 'ssl_verify_depth number;'
                        },
                        {
                          'status_format' => 'status_format json; status_format jsonp [ callback ];'
                        },
                        {
                          'status_zone' => 'status_zone zone;'
                        },
                        {
                          'stub_status' => 'stub_status;'
                        },
                        {
                          'sub_filter' => 'sub_filter string replacement;'
                        },
                        {
                          'sub_filter_last_modified' => 'sub_filter_last_modified on | off;'
                        },
                        {
                          'sub_filter_once' => 'sub_filter_once on | off;'
                        },
                        {
                          'sub_filter_types' => 'sub_filter_types mime-type...;'
                        },
                        {
                          'userid' => 'userid on | v1 | log | off;'
                        },
                        {
                          'userid_domain' => 'userid_domain name | none;'
                        },
                        {
                          'userid_expires' => 'userid_expires time | max | off;'
                        },
                        {
                          'userid_mark' => 'userid_mark letter | digit | = | off;'
                        },
                        {
                          'userid_name' => 'userid_name name;'
                        },
                        {
                          'userid_p3p' => 'userid_p3p string | none;'
                        },
                        {
                          'userid_path' => 'userid_path path;'
                        },
                        {
                          'userid_service' => 'userid_service number;'
                        },
                        {
                          'uwsgi_bind' => 'uwsgi_bind address | off;'
                        },
                        {
                          'uwsgi_buffer_size' => 'uwsgi_buffer_size size;'
                        },
                        {
                          'uwsgi_buffering' => 'uwsgi_buffering on | off;'
                        },
                        {
                          'uwsgi_buffers' => 'uwsgi_buffers number size;'
                        },
                        {
                          'uwsgi_busy_buffers_size' => 'uwsgi_busy_buffers_size size;'
                        },
                        {
                          'uwsgi_cache' => 'uwsgi_cache zone | off;'
                        },
                        {
                          'uwsgi_cache_bypass' => 'uwsgi_cache_bypass string...;'
                        },
                        {
                          'uwsgi_cache_key' => 'uwsgi_cache_key string;'
                        },
                        {
                          'uwsgi_cache_lock' => 'uwsgi_cache_lock on | off;'
                        },
                        {
                          'uwsgi_cache_lock_age' => 'uwsgi_cache_lock_age time;'
                        },
                        {
                          'uwsgi_cache_lock_timeout' => 'uwsgi_cache_lock_timeout time;'
                        },
                        {
                          'uwsgi_cache_methods' => 'uwsgi_cache_methods GET | HEAD | POST...;'
                        },
                        {
                          'uwsgi_cache_min_uses' => 'uwsgi_cache_min_uses number;'
                        },
                        {
                          'uwsgi_cache_purge' => 'uwsgi_cache_purge string ...;'
                        },
                        {
                          'uwsgi_cache_revalidate' => 'uwsgi_cache_revalidate on | off;'
                        },
                        {
                          'uwsgi_cache_use_stale' => 'uwsgi_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_503 | http_403 | http_404 | off...;'
                        },
                        {
                          'uwsgi_cache_valid' => 'uwsgi_cache_valid [ code...] time;'
                        },
                        {
                          'uwsgi_connect_timeout' => 'uwsgi_connect_timeout time;'
                        },
                        {
                          'uwsgi_force_ranges' => 'uwsgi_force_ranges on | off;'
                        },
                        {
                          'uwsgi_hide_header' => 'uwsgi_hide_header field;'
                        },
                        {
                          'uwsgi_ignore_client_abort' => 'uwsgi_ignore_client_abort on | off;'
                        },
                        {
                          'uwsgi_ignore_headers' => 'uwsgi_ignore_headers field...;'
                        },
                        {
                          'uwsgi_intercept_errors' => 'uwsgi_intercept_errors on | off;'
                        },
                        {
                          'uwsgi_limit_rate' => 'uwsgi_limit_rate rate;'
                        },
                        {
                          'uwsgi_max_temp_file_size' => 'uwsgi_max_temp_file_size size;'
                        },
                        {
                          'uwsgi_modifier1' => 'uwsgi_modifier1 number;'
                        },
                        {
                          'uwsgi_modifier2' => 'uwsgi_modifier2 number;'
                        },
                        {
                          'uwsgi_next_upstream' => 'uwsgi_next_upstream error | timeout | invalid_header | http_500 | http_503 | http_403 | http_404 | off...;'
                        },
                        {
                          'uwsgi_next_upstream_timeout' => 'uwsgi_next_upstream_timeout time;'
                        },
                        {
                          'uwsgi_next_upstream_tries' => 'uwsgi_next_upstream_tries number;'
                        },
                        {
                          'uwsgi_no_cache' => 'uwsgi_no_cache string...;'
                        },
                        {
                          'uwsgi_param' => 'uwsgi_param parameter value [ if_not_empty ];'
                        },
                        {
                          'uwsgi_pass_header' => 'uwsgi_pass_header field;'
                        },
                        {
                          'uwsgi_pass_request_body' => 'uwsgi_pass_request_body on | off;'
                        },
                        {
                          'uwsgi_pass_request_headers' => 'uwsgi_pass_request_headers on | off;'
                        },
                        {
                          'uwsgi_read_timeout' => 'uwsgi_read_timeout time;'
                        },
                        {
                          'uwsgi_request_buffering' => 'uwsgi_request_buffering on | off;'
                        },
                        {
                          'uwsgi_send_timeout' => 'uwsgi_send_timeout time;'
                        },
                        {
                          'uwsgi_ssl_certificate' => 'uwsgi_ssl_certificate file;'
                        },
                        {
                          'uwsgi_ssl_certificate_key' => 'uwsgi_ssl_certificate_key file;'
                        },
                        {
                          'uwsgi_ssl_ciphers' => 'uwsgi_ssl_ciphers ciphers;'
                        },
                        {
                          'uwsgi_ssl_crl' => 'uwsgi_ssl_crl file;'
                        },
                        {
                          'uwsgi_ssl_name' => 'uwsgi_ssl_name name;'
                        },
                        {
                          'uwsgi_ssl_password_file' => 'uwsgi_ssl_password_file file;'
                        },
                        {
                          'uwsgi_ssl_protocols' => 'uwsgi_ssl_protocols [ SSLv2 ] [ SSLv3 ] [ TLSv1 ] [ TLSv1.1 ] [ TLSv1.2 ];'
                        },
                        {
                          'uwsgi_ssl_server_name' => 'uwsgi_ssl_server_name on | off;'
                        },
                        {
                          'uwsgi_ssl_session_reuse' => 'uwsgi_ssl_session_reuse on | off;'
                        },
                        {
                          'uwsgi_ssl_trusted_certificate' => 'uwsgi_ssl_trusted_certificate file;'
                        },
                        {
                          'uwsgi_ssl_verify' => 'uwsgi_ssl_verify on | off;'
                        },
                        {
                          'uwsgi_ssl_verify_depth' => 'uwsgi_ssl_verify_depth number;'
                        },
                        {
                          'uwsgi_store' => 'uwsgi_store on | off | string;'
                        },
                        {
                          'uwsgi_store_access' => 'uwsgi_store_access users: permissions...;'
                        },
                        {
                          'uwsgi_temp_file_write_size' => 'uwsgi_temp_file_write_size size;'
                        },
                        {
                          'uwsgi_temp_path' => 'uwsgi_temp_path path [ level1 [ level2 [ level3 ]]];'
                        },
                        {
                          'xml_entities' => 'xml_entities path;'
                        },
                        {
                          'xslt_last_modified' => 'xslt_last_modified on | off;'
                        },
                        {
                          'xslt_param' => 'xslt_param parameter value;'
                        },
                        {
                          'xslt_string_param' => 'xslt_string_param parameter value;'
                        },
                        {
                          'xslt_types' => 'xslt_types mime-type...;'
                        },
                        {
                          'listen' => 'listen address: port [ bind ];'
                        },
                        {
                          'protocol' => 'protocol imap | pop3 | smtp;'
                        },
                        {
                          'resolver' => 'resolver address... [ valid = time ]; resolver off;'
                        },
                        {
                          'resolver_timeout' => 'resolver_timeout time;'
                        },
                        {
                          'server_name' => 'server_name name;'
                        },
                        {
                          'timeout' => 'timeout time;'
                        },
                        {
                          'auth_http' => 'auth_http URL;'
                        },
                        {
                          'auth_http_header' => 'auth_http_header header value;'
                        },
                        {
                          'auth_http_pass_client_cert' => 'auth_http_pass_client_cert on | off;'
                        },
                        {
                          'auth_http_timeout' => 'auth_http_timeout time;'
                        },
                        {
                          'proxy_buffer' => 'proxy_buffer size;'
                        },
                        {
                          'proxy_pass_error_message' => 'proxy_pass_error_message on | off;'
                        },
                        {
                          'proxy_timeout' => 'proxy_timeout timeout;'
                        },
                        {
                          'xclient' => 'xclient on | off;'
                        },
                        {
                          'ssl' => 'ssl on | off;'
                        },
                        {
                          'ssl_certificate' => 'ssl_certificate file;'
                        },
                        {
                          'ssl_certificate_key' => 'ssl_certificate_key file;'
                        },
                        {
                          'ssl_ciphers' => 'ssl_ciphers ciphers;'
                        },
                        {
                          'ssl_client_certificate' => 'ssl_client_certificate file;'
                        },
                        {
                          'ssl_crl' => 'ssl_crl file;'
                        },
                        {
                          'ssl_dhparam' => 'ssl_dhparam file;'
                        },
                        {
                          'ssl_ecdh_curve' => 'ssl_ecdh_curve curve;'
                        },
                        {
                          'ssl_password_file' => 'ssl_password_file file;'
                        },
                        {
                          'ssl_prefer_server_ciphers' => 'ssl_prefer_server_ciphers on | off;'
                        },
                        {
                          'ssl_protocols' => 'ssl_protocols [ SSLv2 ] [ SSLv3 ] [ TLSv1 ] [ TLSv1.1 ] [ TLSv1.2 ];'
                        },
                        {
                          'ssl_session_cache' => 'ssl_session_cache off | none | [ builtin [: size ]] [ shared: name: size ];'
                        },
                        {
                          'ssl_session_ticket_key' => 'ssl_session_ticket_key file;'
                        },
                        {
                          'ssl_session_tickets' => 'ssl_session_tickets on | off;'
                        },
                        {
                          'ssl_session_timeout' => 'ssl_session_timeout time;'
                        },
                        {
                          'ssl_trusted_certificate' => 'ssl_trusted_certificate file;'
                        },
                        {
                          'ssl_verify_client' => 'ssl_verify_client on | off | optional | optional_no_ca;'
                        },
                        {
                          'ssl_verify_depth' => 'ssl_verify_depth number;'
                        },
                        {
                          'starttls' => 'starttls on | off | only;'
                        },
                        {
                          'imap_auth' => 'imap_auth method...;'
                        },
                        {
                          'imap_capabilities' => 'imap_capabilities extension...;'
                        },
                        {
                          'imap_client_buffer' => 'imap_client_buffer size;'
                        },
                        {
                          'pop3_auth' => 'pop3_auth method...;'
                        },
                        {
                          'pop3_capabilities' => 'pop3_capabilities extension...;'
                        },
                        {
                          'smtp_auth' => 'smtp_auth method...;'
                        },
                        {
                          'smtp_capabilities' => 'smtp_capabilities extension...;'
                        },
                        {
                          'listen' => 'listen address: port [ ssl ] [ bind ] [ ipv6only = on | off ] [ so_keepalive = on | off |[ keepidle ]:[ keepintvl ]:[ keepcnt ]];'
                        },
                        {
                          'resolver' => 'resolver address... [ valid = time ] [ ipv6 = on | off ];'
                        },
                        {
                          'resolver_timeout' => 'resolver_timeout time;'
                        },
                        {
                          'proxy_connect_timeout' => 'proxy_connect_timeout time;'
                        },
                        {
                          'proxy_downstream_buffer' => 'proxy_downstream_buffer size;'
                        },
                        {
                          'proxy_next_upstream' => 'proxy_next_upstream on | off;'
                        },
                        {
                          'proxy_next_upstream_timeout' => 'proxy_next_upstream_timeout time;'
                        },
                        {
                          'proxy_next_upstream_tries' => 'proxy_next_upstream_tries number;'
                        },
                        {
                          'proxy_pass' => 'proxy_pass address;'
                        },
                        {
                          'proxy_ssl' => 'proxy_ssl on | off;'
                        },
                        {
                          'proxy_ssl_certificate' => 'proxy_ssl_certificate file;'
                        },
                        {
                          'proxy_ssl_certificate_key' => 'proxy_ssl_certificate_key file;'
                        },
                        {
                          'proxy_ssl_ciphers' => 'proxy_ssl_ciphers ciphers;'
                        },
                        {
                          'proxy_ssl_crl' => 'proxy_ssl_crl file;'
                        },
                        {
                          'proxy_ssl_name' => 'proxy_ssl_name name;'
                        },
                        {
                          'proxy_ssl_password_file' => 'proxy_ssl_password_file file;'
                        },
                        {
                          'proxy_ssl_server_name' => 'proxy_ssl_server_name on | off;'
                        },
                        {
                          'proxy_ssl_session_reuse' => 'proxy_ssl_session_reuse on | off;'
                        },
                        {
                          'proxy_ssl_protocols' => 'proxy_ssl_protocols [ SSLv2 ] [ SSLv3 ] [ TLSv1 ] [ TLSv1.1 ] [ TLSv1.2 ];'
                        },
                        {
                          'proxy_ssl_trusted_certificate' => 'proxy_ssl_trusted_certificate file;'
                        },
                        {
                          'proxy_ssl_verify' => 'proxy_ssl_verify on | off;'
                        },
                        {
                          'proxy_ssl_verify_depth' => 'proxy_ssl_verify_depth number;'
                        },
                        {
                          'proxy_timeout' => 'proxy_timeout timeout;'
                        },
                        {
                          'proxy_upstream_buffer' => 'proxy_upstream_buffer size;'
                        },
                        {
                          'ssl_certificate' => 'ssl_certificate file;'
                        },
                        {
                          'ssl_certificate_key' => 'ssl_certificate_key file;'
                        },
                        {
                          'ssl_ciphers' => 'ssl_ciphers ciphers;'
                        },
                        {
                          'ssl_dhparam' => 'ssl_dhparam file;'
                        },
                        {
                          'ssl_ecdh_curve' => 'ssl_ecdh_curve curve;'
                        },
                        {
                          'ssl_handshake_timeout' => 'ssl_handshake_timeout time;'
                        },
                        {
                          'ssl_password_file' => 'ssl_password_file file;'
                        },
                        {
                          'ssl_prefer_server_ciphers' => 'ssl_prefer_server_ciphers on | off;'
                        },
                        {
                          'ssl_protocols' => 'ssl_protocols [ SSLv2 ] [ SSLv3 ] [ TLSv1 ] [ TLSv1.1 ] [ TLSv1.2 ];'
                        },
                        {
                          'ssl_session_cache' => 'ssl_session_cache off | none | [ builtin [: size ]] [ shared: name: size ];'
                        },
                        {
                          'ssl_session_ticket_key' => 'ssl_session_ticket_key file;'
                        },
                        {
                          'ssl_session_tickets' => 'ssl_session_tickets on | off;'
                        },
                        {
                          'ssl_session_timeout' => 'ssl_session_timeout time;'
                        },
                        {
                          'health_check' => 'health_check [ parameters ];'
                        },
                        {
                          'health_check_timeout' => 'health_check_timeout timeout;'
                        },
                        {
                          'error_log' => 'error_log file | stderr | syslog: server = address [, parameter = value ] | memory: size [ debug | info | notice | warn | error | crit | alert | emerg ];'
                        }
                      ]
        };
